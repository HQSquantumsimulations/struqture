Search.setIndex({"docnames": ["generated/generated/generated/struqture_py.bosons.BosonHamiltonian", "generated/generated/generated/struqture_py.bosons.BosonLindbladNoiseOperator", "generated/generated/generated/struqture_py.bosons.BosonLindbladOpenSystem", "generated/generated/generated/struqture_py.bosons.BosonOperator", "generated/generated/generated/struqture_py.bosons.BosonProduct", "generated/generated/generated/struqture_py.bosons.HermitianBosonProduct", "generated/generated/generated/struqture_py.fermions.FermionHamiltonian", "generated/generated/generated/struqture_py.fermions.FermionLindbladNoiseOperator", "generated/generated/generated/struqture_py.fermions.FermionLindbladOpenSystem", "generated/generated/generated/struqture_py.fermions.FermionOperator", "generated/generated/generated/struqture_py.fermions.FermionProduct", "generated/generated/generated/struqture_py.fermions.HermitianFermionProduct", "generated/generated/generated/struqture_py.mixed_systems.HermitianMixedProduct", "generated/generated/generated/struqture_py.mixed_systems.MixedDecoherenceProduct", "generated/generated/generated/struqture_py.mixed_systems.MixedHamiltonian", "generated/generated/generated/struqture_py.mixed_systems.MixedLindbladNoiseOperator", "generated/generated/generated/struqture_py.mixed_systems.MixedLindbladOpenSystem", "generated/generated/generated/struqture_py.mixed_systems.MixedOperator", "generated/generated/generated/struqture_py.mixed_systems.MixedPlusMinusOperator", "generated/generated/generated/struqture_py.mixed_systems.MixedPlusMinusProduct", "generated/generated/generated/struqture_py.mixed_systems.MixedProduct", "generated/generated/generated/struqture_py.spins.DecoherenceProduct", "generated/generated/generated/struqture_py.spins.PauliProduct", "generated/generated/generated/struqture_py.spins.QubitHamiltonian", "generated/generated/generated/struqture_py.spins.QubitLindbladNoiseOperator", "generated/generated/generated/struqture_py.spins.QubitLindbladOpenSystem", "generated/generated/generated/struqture_py.spins.QubitOperator", "generated/generated/struqture_py.bosons", "generated/generated/struqture_py.fermions", "generated/generated/struqture_py.mixed_systems", "generated/generated/struqture_py.spins", "generated/struqture_py", "index", "modules", "requirements"], "filenames": ["generated/generated/generated/struqture_py.bosons.BosonHamiltonian.rst", "generated/generated/generated/struqture_py.bosons.BosonLindbladNoiseOperator.rst", "generated/generated/generated/struqture_py.bosons.BosonLindbladOpenSystem.rst", "generated/generated/generated/struqture_py.bosons.BosonOperator.rst", "generated/generated/generated/struqture_py.bosons.BosonProduct.rst", "generated/generated/generated/struqture_py.bosons.HermitianBosonProduct.rst", "generated/generated/generated/struqture_py.fermions.FermionHamiltonian.rst", "generated/generated/generated/struqture_py.fermions.FermionLindbladNoiseOperator.rst", "generated/generated/generated/struqture_py.fermions.FermionLindbladOpenSystem.rst", "generated/generated/generated/struqture_py.fermions.FermionOperator.rst", "generated/generated/generated/struqture_py.fermions.FermionProduct.rst", "generated/generated/generated/struqture_py.fermions.HermitianFermionProduct.rst", "generated/generated/generated/struqture_py.mixed_systems.HermitianMixedProduct.rst", "generated/generated/generated/struqture_py.mixed_systems.MixedDecoherenceProduct.rst", "generated/generated/generated/struqture_py.mixed_systems.MixedHamiltonian.rst", "generated/generated/generated/struqture_py.mixed_systems.MixedLindbladNoiseOperator.rst", "generated/generated/generated/struqture_py.mixed_systems.MixedLindbladOpenSystem.rst", "generated/generated/generated/struqture_py.mixed_systems.MixedOperator.rst", "generated/generated/generated/struqture_py.mixed_systems.MixedPlusMinusOperator.rst", "generated/generated/generated/struqture_py.mixed_systems.MixedPlusMinusProduct.rst", "generated/generated/generated/struqture_py.mixed_systems.MixedProduct.rst", "generated/generated/generated/struqture_py.spins.DecoherenceProduct.rst", "generated/generated/generated/struqture_py.spins.PauliProduct.rst", "generated/generated/generated/struqture_py.spins.QubitHamiltonian.rst", "generated/generated/generated/struqture_py.spins.QubitLindbladNoiseOperator.rst", "generated/generated/generated/struqture_py.spins.QubitLindbladOpenSystem.rst", "generated/generated/generated/struqture_py.spins.QubitOperator.rst", "generated/generated/struqture_py.bosons.rst", "generated/generated/struqture_py.fermions.rst", "generated/generated/struqture_py.mixed_systems.rst", "generated/generated/struqture_py.spins.rst", "generated/struqture_py.rst", "index.rst", "modules.rst", "requirements.txt"], "titles": ["struqture_py.bosons.BosonHamiltonian", "struqture_py.bosons.BosonLindbladNoiseOperator", "struqture_py.bosons.BosonLindbladOpenSystem", "struqture_py.bosons.BosonOperator", "struqture_py.bosons.BosonProduct", "struqture_py.bosons.HermitianBosonProduct", "struqture_py.fermions.FermionHamiltonian", "struqture_py.fermions.FermionLindbladNoiseOperator", "struqture_py.fermions.FermionLindbladOpenSystem", "struqture_py.fermions.FermionOperator", "struqture_py.fermions.FermionProduct", "struqture_py.fermions.HermitianFermionProduct", "struqture_py.mixed_systems.HermitianMixedProduct", "struqture_py.mixed_systems.MixedDecoherenceProduct", "struqture_py.mixed_systems.MixedHamiltonian", "struqture_py.mixed_systems.MixedLindbladNoiseOperator", "struqture_py.mixed_systems.MixedLindbladOpenSystem", "struqture_py.mixed_systems.MixedOperator", "struqture_py.mixed_systems.MixedPlusMinusOperator", "struqture_py.mixed_systems.MixedPlusMinusProduct", "struqture_py.mixed_systems.MixedProduct", "struqture_py.spins.DecoherenceProduct", "struqture_py.spins.PauliProduct", "struqture_py.spins.QubitHamiltonian", "struqture_py.spins.QubitLindbladNoiseOperator", "struqture_py.spins.QubitLindbladOpenSystem", "struqture_py.spins.QubitOperator", "struqture_py.bosons", "struqture_py.fermions", "struqture_py.mixed_systems", "struqture_py.spins", "struqture_py", "Welcome to struqture_py's documentation!", "struqture_py documentation", "&lt;no title&gt;"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "These": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "represent": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "character": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "bosonoper": [0, 27], "repres": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "hamiltonian": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "spin": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "option": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "number": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30], "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34], "test": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "npt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "scipi": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "spars": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "sp": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "qoqo_calculator_pyo3": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "calculatorcomplex": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30], "hermitianbosonproduct": [0, 27], "ssystem": [0, 3, 6, 9, 14, 17, 18, 23, 26, 27, 28, 29, 30], "2": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34], "pp": [0, 3, 6, 9, 14, 17, 18, 22, 23, 26, 27, 28, 29, 30], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "add_operator_product": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 23, 24, 26, 27, 28, 29, 30], "5": [0, 3, 6, 9, 14, 17, 18, 23, 26, 27, 28, 29, 30], "assert_equ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "current_number_mod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 27, 28], "get": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "kei": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "add": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "new": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "union": [0, 2, 3, 6, 8, 9, 14, 16, 17, 18, 23, 25, 26, 27, 28, 29, 30], "calculatorfloat": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "pair": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 23, 24, 26, 27, 28, 29, 30], "exist": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30], "entri": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "rais": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "typeerror": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "valueerror": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "product": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "could": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "construct": [0, 1, 2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30], "error": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 23, 24, 26, 27, 28, 29, 30], "function": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "self": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "input": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "mode": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "static": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "current_vers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "current": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "struqtur": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34], "librari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "empty_clon": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "capac": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "none": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "instanc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "ha": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "clone": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "all": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "other": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "properti": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "given": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "creat": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30], "empti": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "same": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "from_bincod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "convert": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "bincod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "crate": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "bytearrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "serial": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "form": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "deseri": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "cannot": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "byte": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "arrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "from_json": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "json": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "coeffici": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "correspond": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "hermitian_conjug": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30], "hermitian": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30], "conjug": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30], "is_empti": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30], "true": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "contain": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30], "whether": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "bool": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30], "json_schema": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "jsonschema": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "serialis": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "schema": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "list": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "unsort": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30], "sequenc": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30], "operatorproduct": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 23, 24, 26, 27, 28, 29, 30], "min_supported_vers": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "minimum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "support": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "remov": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 23, 24, 26, 27, 28, 29, 30], "had": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 23, 24, 26, 27, 28, 29, 30], "befor": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 23, 24, 26, 27, 28, 29, 30], "wa": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30], "set": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "overwrit": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 23, 24, 26, 27, 28, 29, 30], "overwritten": [0, 1, 3, 6, 7, 9, 14, 15, 17, 18, 23, 24, 26, 27, 28, 29, 30], "to_bincod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "to_json": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "truncat": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "threshold": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "copi": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "without": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "under": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "inclus": [0, 1, 2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30], "noisi": [1, 2, 7, 8, 15, 16, 21, 22, 24, 25, 27, 28, 29, 30], "In": [1, 2, 7, 8, 15, 16, 24, 25, 27, 28, 29, 30], "bosonproduct": [1, 2, 3, 12, 13, 14, 15, 17, 18, 19, 20, 27, 29], "sln": [1, 2, 7, 8, 15, 24, 25, 27, 28, 29, 30], "dp": [1, 2, 7, 8, 15, 21, 24, 25, 27, 28, 29, 30], "1": [1, 2, 3, 7, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 34], "left": [1, 2, 7, 8, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "hand": [1, 7, 15, 21, 22, 24, 27, 28, 29, 30], "right": [1, 2, 7, 8, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "bosonlindbladopenoper": [2, 27], "system_add_operator_product": [2, 8, 16, 25, 27, 28, 29, 30], "group": [2, 8, 16, 25, 27, 28, 29, 30], "nois": [2, 8, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30], "take": [2, 8, 16, 25, 27, 28, 29, 30], "tupl": [2, 8, 12, 13, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30], "term": [2, 4, 5, 8, 10, 11, 12, 13, 16, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30], "combin": [2, 8, 16, 21, 22, 25, 27, 28, 29, 30], "them": [2, 8, 16, 25, 27, 28, 29, 30], "opensystem": [2, 8, 16, 25, 27, 28, 29, 30], "have": [2, 4, 5, 8, 10, 11, 12, 13, 16, 20, 25, 27, 28, 29, 30], "part": [2, 4, 5, 8, 10, 11, 12, 13, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "noise_add_operator_product": [2, 8, 16, 25, 27, 28, 29, 30], "open": [2, 8, 16, 25, 27, 28, 29, 30], "element": [2, 8, 16, 25, 27, 28, 29, 30], "noise_get": [2, 8, 16, 25, 27, 28, 29, 30], "noise_set": [2, 8, 16, 25, 27, 28, 29, 30], "system_get": [2, 8, 16, 25, 27, 28, 29, 30], "system_set": [2, 8, 16, 25, 27, 28, 29, 30], "ungroup": [2, 8, 16, 25, 27, 28, 29, 30], "creator": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "annihil": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "A": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "creation": [4, 5, 10, 11, 12, 13, 19, 20, 27, 28, 29], "oper": [4, 5, 10, 11, 12, 13, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "index": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "non": [4, 5, 10, 11, 12, 13, 19, 20, 27, 28, 29], "normal": [4, 5, 10, 11, 12, 13, 19, 20, 27, 28, 29], "order": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "can": [4, 5, 10, 11, 22, 27, 28, 29, 30], "written": [4, 5, 10, 11, 27, 28], "sum": [4, 5, 10, 11, 27, 28], "over": [4, 5, 10, 11, 27, 28], "when": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "ad": [4, 5, 10, 11, 24, 27, 28, 30], "summand": [4, 5, 10, 11, 27, 28], "querri": [4, 5, 10, 11, 27, 28], "weight": [4, 5, 10, 11, 27, 28], "For": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "c_0a_0": [4, 5, 10, 27, 28], "b_product": [4, 5, 27], "indic": [4, 5, 10, 11, 12, 13, 20, 21, 22, 27, 28, 29, 30], "create_valid_pair": [4, 5, 10, 11, 12, 13, 20, 27, 28, 29], "valid": [4, 5, 10, 11, 12, 13, 20, 27, 28, 29], "first": [4, 5, 10, 11, 12, 13, 20, 27, 28, 29], "item": [4, 5, 10, 11, 12, 13, 20, 27, 28, 29], "second": [4, 5, 10, 11, 12, 13, 20, 27, 28, 29], "transform": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "accord": [4, 5, 10, 11, 12, 13, 20, 27, 28, 29], "either": [4, 5, 10, 11, 22, 27, 28, 30], "doubl": [4, 5, 10, 11, 27, 28], "specif": [4, 5, 10, 11, 21, 22, 27, 28, 30], "onli": [4, 5, 10, 11, 27, 28], "applic": [4, 5, 10, 11, 27, 28], "fermion": [4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30], "maxim": [4, 5, 10, 11, 27, 28], "act": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 24, 27, 28, 29, 30], "state": [4, 5, 10, 11, 27, 28], "space": [4, 5, 10, 11, 27, 28], "unknown": [4, 5, 10, 11, 27, 28], "dimens": [4, 5, 10, 11, 23, 24, 25, 26, 27, 28, 30], "There": [4, 5, 10, 11, 27, 28], "lower": [4, 5, 10, 11, 27, 28], "bound": [4, 5, 10, 11, 27, 28], "base": [4, 5, 10, 11, 27, 28], "consist": [4, 5, 10, 11, 27, 28], "one": [4, 5, 10, 11, 27, 28, 29], "would": [4, 5, 10, 11, 27, 28, 29], "annhihil": [4, 5, 10, 11, 27, 28], "3": [4, 5, 10, 11, 21, 22, 27, 28, 30], "four": [4, 5, 10, 11, 27, 28], "from_str": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "string": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "its": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "prefactor": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "potenti": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "sign": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "pick": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "up": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "float": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "is_natural_hermitian": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "natur": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "appli": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "doe": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "chang": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "mix": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "is_naturally_hermitian": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "evalu": [4, 5, 10, 11, 12, 13, 19, 20, 21, 22, 27, 28, 29, 30], "number_annihil": [4, 5, 10, 11, 27, 28], "number_cr": [4, 5, 10, 11, 27, 28], "remap_mod": [4, 5, 10, 11, 27, 28], "reordering_dictionari": [4, 5, 10, 11, 27, 28], "remap": [4, 5, 10, 11, 21, 22, 27, 28, 30], "dictionari": [4, 5, 10, 11, 21, 22, 27, 28, 30], "dict": [4, 5, 10, 11, 21, 22, 27, 28, 30], "result": [4, 5, 10, 11, 21, 22, 27, 28, 30], "symmetri": [4, 5, 10, 11, 27, 28], "antisymmetri": [4, 5, 10, 11, 27, 28], "reorder": [4, 5, 10, 11, 27, 28], "permut": [4, 5, 10, 11, 27, 28], "fermionoper": [6, 28], "hermitianfermionproduct": [6, 28], "jordan_wign": [6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 26, 28, 30], "jordan": [6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 26, 28, 30], "wigner": [6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 26, 28, 30], "map": [6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25, 26, 28, 30], "fermionproduct": [7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 28, 29], "fermionlindbladopenoper": [8, 28], "fp": [10, 11, 28], "boson": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30], "c_0a_1": [11, 28], "pauli": [12, 13, 19, 20, 21, 22, 29, 30], "pauliproduct": [12, 14, 17, 18, 20, 23, 26, 29, 30], "matric": [12, 13, 19, 20, 21, 22, 29, 30], "qubit": [12, 13, 19, 20, 21, 22, 29, 30], "It": [12, 13, 19, 20, 29], "build": [12, 13, 19, 20, 21, 22, 29, 30], "note": [12, 13, 19, 20, 29], "physic": [12, 13, 19, 20, 29, 31, 32], "usual": [12, 13, 19, 20, 29], "consid": [12, 13, 19, 20, 29], "presenc": [12, 13, 19, 20, 29], "bath": [12, 13, 19, 20, 29], "shown": [12, 13, 19, 20, 29], "below": [12, 13, 19, 20, 29], "sigma_0": [12, 13, 19, 20, 21, 22, 29, 30], "x": [12, 13, 19, 20, 21, 22, 24, 25, 29, 30], "sigma_2": [12, 13, 19, 20, 21, 22, 29, 30], "sigma_1": [12, 13, 19, 20, 29], "mp_spins_system": [12, 13, 19, 20, 29], "mp_spins_bath": [12, 13, 19, 20, 29], "a_1": [12, 13, 19, 20, 29], "mp_boson": [12, 13, 19, 20, 29], "mp": [12, 13, 19, 20, 29], "couldn": [12, 13, 20, 29], "t": [12, 13, 20, 29], "current_number_bosonic_mod": [12, 13, 14, 15, 16, 17, 18, 19, 20, 29], "each": [12, 13, 14, 15, 16, 17, 18, 19, 20, 29], "subsystem": [12, 13, 14, 15, 16, 17, 18, 19, 20, 29], "upon": [12, 13, 19, 20, 29], "sub": [12, 13, 19, 20, 29], "current_number_fermionic_mod": [12, 13, 14, 15, 16, 17, 18, 19, 20, 29], "current_number_spin": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30], "decoherenceproduct": [13, 15, 24, 25, 29, 30], "number_spin": [14, 15, 16, 17, 18, 23, 24, 25, 26, 29, 30], "number_boson": [14, 15, 16, 17, 18, 29], "number_fermion": [14, 15, 16, 17, 18, 29], "mixedoper": [14, 18, 29], "hermitianmixedproduct": [14, 22, 29, 30], "z": [14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 29, 30], "mixeddecoherenceproduct": [15, 21, 29, 30], "mixedlindbladopenoper": [16, 29], "mixedproduct": [17, 19, 22, 29, 30], "mixedplusminusproduct": [18, 29], "from_mixed_system": [18, 29], "to_mixed_system": [18, 29], "plusminusproduct": [19, 29, 30], "from_mixed_product": [19, 29], "to_mixed_product_list": [19, 29], "convers": [19, 29], "success": [19, 29], "singledecoherenceoper": [21, 30], "thei": [21, 22, 30], "decoher": [21, 30], "suppos": [21, 22, 30], "add_nois": [21, 30], "qubitlindbladopensystem": [21, 22, 30], "spinlindbladnoisesystem": [21, 30], "qubitlindbladnoiseoper": [21, 30], "mixed_system": [21, 22, 30], "ii": [21, 30], "set_pauli": [21, 22, 30], "concaten": [21, 22, 30], "two": [21, 22, 29, 30], "overlap": [21, 22, 30], "maximum": [21, 22, 30], "matrix": [21, 22, 23, 24, 25, 26, 30], "": [21, 22, 23, 24, 25, 26, 30], "intern": [21, 22, 30], "multipli": [21, 22, 30], "multipl": [21, 22, 30], "complex": [21, 22, 23, 24, 25, 26, 30], "remap_qubit": [21, 22, 30], "internal_map": [21, 22, 30], "consum": [21, 22, 30], "correctli": [21, 22, 30], "singlequbitoper": [22, 30], "free": [22, 30], "set_pauli_product": [22, 30], "qubithamiltonian": [22, 30], "qubitoper": [22, 23, 30], "y": [22, 30], "4": [23, 24, 25, 26, 30], "coo_matrix": [23, 24, 25, 26, 30], "sparse_matrix_superoperator_coo": [23, 24, 25, 26, 30], "shape": [23, 24, 25, 26, 30], "sparse_lindblad_entri": [23, 24, 25, 26, 30], "output": [23, 24, 25, 26, 30], "lindblad": [23, 24, 25, 26, 27, 28, 29, 30], "rate": [23, 24, 25, 26, 30], "where": [23, 24, 25, 26, 30], "respect": [23, 24, 25, 26, 30], "np": [23, 24, 25, 26, 30], "ndarrai": [23, 24, 25, 26, 30], "calculatorerror": [23, 24, 25, 26, 30], "runtimeerror": [23, 24, 25, 26, 30], "superoper": [23, 24, 25, 26, 30], "sparse_matrix_coo": [23, 26, 30], "coo": [23, 24, 25, 26, 30], "o": [23, 24, 25, 26, 30], "defin": [23, 24, 25, 26, 30], "so": [23, 24, 25, 26, 30], "flatten": [23, 24, 25, 26, 30], "p": [23, 24, 25, 26, 30], "wher": [23, 24, 25, 26, 30], "commut": [23, 24, 25, 26, 30], "vector": [23, 24, 25, 26, 30], "row": [23, 24, 25, 26, 30], "major": [23, 24, 25, 26, 30], "unitary_sparse_matrix_coo": [23, 24, 25, 26, 30], "unitari": [23, 24, 25, 26, 30], "format": [23, 24, 25, 26, 30], "separate_into_n_term": [24, 30], "number_spins_left": [24, 30], "number_spins_right": [24, 30], "separ": [24, 30], "remain": [24, 30], "filter": [24, 30], "match": [24, 30], "contribut": [24, 30], "spinlindbladopenoper": [25, 30], "modul": [27, 28, 29, 30], "python": [27, 28, 29, 30, 31], "interfac": [27, 28, 30, 31], "bosonhamiltonian": 27, "bosonlindbladnoiseoper": 27, "bosonlindbladopensystem": 27, "fermionhamiltonian": 28, "fermionlindbladnoiseoper": 28, "fermionlindbladopensystem": 28, "ani": 29, "sever": 29, "both": 29, "here": 29, "inferfac": 29, "quantum": [29, 31, 32], "mixedhamiltonian": 29, "mixedlindbladnoiseoper": 29, "mixedlindbladopensystem": 29, "mixedplusminusoper": 29, "plusminuslindbladnoiseoper": 30, "plu": 30, "from_qubit_noise_oper": 30, "to_qubit_noise_oper": 30, "plusminusoper": 30, "from_qubit_hamiltonian": 30, "from_qubit_oper": 30, "to_qubit_hamiltonian": 30, "to_qubit_oper": 30, "singleplusminusoper": 30, "minu": 30, "from_product": 30, "neither": 30, "nor": 30, "to_decoherence_product_list": 30, "to_pauli_product_list": 30, "hq": [31, 32], "simul": [31, 32], "packag": [31, 32], "copyright": 31, "2021": 31, "2023": 31, "gmbh": 31, "reserv": 31, "py": 34, "sphinx": 34, "nbsphinx": 34, "pygment": 34, "recommonmark": 34, "myst_pars": 34, "sphinx_rtd_them": 34}, "objects": {"": [[31, 0, 0, "-", "struqture_py"]], "struqture_py": [[27, 0, 0, "-", "bosons"], [28, 0, 0, "-", "fermions"], [29, 0, 0, "-", "mixed_systems"], [30, 0, 0, "-", "spins"]], "struqture_py.bosons": [[27, 1, 1, "", "BosonHamiltonian"], [27, 1, 1, "", "BosonLindbladNoiseOperator"], [27, 1, 1, "", "BosonLindbladOpenSystem"], [27, 1, 1, "", "BosonOperator"], [27, 1, 1, "", "BosonProduct"], [27, 1, 1, "", "HermitianBosonProduct"]], "struqture_py.bosons.BosonHamiltonian": [[0, 2, 1, "", "__init__"], [27, 2, 1, "", "add_operator_product"], [27, 2, 1, "", "current_number_modes"], [27, 2, 1, "", "current_version"], [27, 2, 1, "", "empty_clone"], [27, 2, 1, "", "from_bincode"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get"], [27, 2, 1, "", "hermitian_conjugate"], [27, 2, 1, "", "is_empty"], [27, 2, 1, "", "json_schema"], [27, 2, 1, "", "keys"], [27, 2, 1, "", "min_supported_version"], [27, 2, 1, "", "remove"], [27, 2, 1, "", "set"], [27, 2, 1, "", "to_bincode"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "truncate"], [27, 2, 1, "", "values"]], "struqture_py.bosons.BosonLindbladNoiseOperator": [[1, 2, 1, "", "__init__"], [27, 2, 1, "", "add_operator_product"], [27, 2, 1, "", "current_number_modes"], [27, 2, 1, "", "current_version"], [27, 2, 1, "", "empty_clone"], [27, 2, 1, "", "from_bincode"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get"], [27, 2, 1, "", "is_empty"], [27, 2, 1, "", "json_schema"], [27, 2, 1, "", "keys"], [27, 2, 1, "", "min_supported_version"], [27, 2, 1, "", "remove"], [27, 2, 1, "", "set"], [27, 2, 1, "", "to_bincode"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "truncate"], [27, 2, 1, "", "values"]], "struqture_py.bosons.BosonLindbladOpenSystem": [[2, 2, 1, "", "__init__"], [27, 2, 1, "", "current_number_modes"], [27, 2, 1, "", "current_version"], [27, 2, 1, "", "empty_clone"], [27, 2, 1, "", "from_bincode"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "group"], [27, 2, 1, "", "json_schema"], [27, 2, 1, "", "min_supported_version"], [27, 2, 1, "", "noise"], [27, 2, 1, "", "noise_add_operator_product"], [27, 2, 1, "", "noise_get"], [27, 2, 1, "", "noise_set"], [27, 2, 1, "", "system"], [27, 2, 1, "", "system_add_operator_product"], [27, 2, 1, "", "system_get"], [27, 2, 1, "", "system_set"], [27, 2, 1, "", "to_bincode"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "truncate"], [27, 2, 1, "", "ungroup"]], "struqture_py.bosons.BosonOperator": [[3, 2, 1, "", "__init__"], [27, 2, 1, "", "add_operator_product"], [27, 2, 1, "", "current_number_modes"], [27, 2, 1, "", "current_version"], [27, 2, 1, "", "empty_clone"], [27, 2, 1, "", "from_bincode"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "get"], [27, 2, 1, "", "hermitian_conjugate"], [27, 2, 1, "", "is_empty"], [27, 2, 1, "", "json_schema"], [27, 2, 1, "", "keys"], [27, 2, 1, "", "min_supported_version"], [27, 2, 1, "", "remove"], [27, 2, 1, "", "set"], [27, 2, 1, "", "to_bincode"], [27, 2, 1, "", "to_json"], [27, 2, 1, "", "truncate"], [27, 2, 1, "", "values"]], "struqture_py.bosons.BosonProduct": [[4, 2, 1, "", "__init__"], [27, 2, 1, "", "annihilators"], [27, 2, 1, "", "create_valid_pair"], [27, 2, 1, "", "creators"], [27, 2, 1, "", "current_number_modes"], [27, 2, 1, "", "current_version"], [27, 2, 1, "", "from_bincode"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "from_string"], [27, 2, 1, "", "hermitian_conjugate"], [27, 2, 1, "", "is_natural_hermitian"], [27, 2, 1, "", "json_schema"], [27, 2, 1, "", "min_supported_version"], [27, 2, 1, "", "number_annihilators"], [27, 2, 1, "", "number_creators"], [27, 2, 1, "", "remap_modes"], [27, 2, 1, "", "to_bincode"], [27, 2, 1, "", "to_json"]], "struqture_py.bosons.HermitianBosonProduct": [[5, 2, 1, "", "__init__"], [27, 2, 1, "", "annihilators"], [27, 2, 1, "", "create_valid_pair"], [27, 2, 1, "", "creators"], [27, 2, 1, "", "current_number_modes"], [27, 2, 1, "", "current_version"], [27, 2, 1, "", "from_bincode"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "from_string"], [27, 2, 1, "", "hermitian_conjugate"], [27, 2, 1, "", "is_natural_hermitian"], [27, 2, 1, "", "json_schema"], [27, 2, 1, "", "min_supported_version"], [27, 2, 1, "", "number_annihilators"], [27, 2, 1, "", "number_creators"], [27, 2, 1, "", "remap_modes"], [27, 2, 1, "", "to_bincode"], [27, 2, 1, "", "to_json"]], "struqture_py.fermions": [[28, 1, 1, "", "FermionHamiltonian"], [28, 1, 1, "", "FermionLindbladNoiseOperator"], [28, 1, 1, "", "FermionLindbladOpenSystem"], [28, 1, 1, "", "FermionOperator"], [28, 1, 1, "", "FermionProduct"], [28, 1, 1, "", "HermitianFermionProduct"]], "struqture_py.fermions.FermionHamiltonian": [[6, 2, 1, "", "__init__"], [28, 2, 1, "", "add_operator_product"], [28, 2, 1, "", "current_number_modes"], [28, 2, 1, "", "current_version"], [28, 2, 1, "", "empty_clone"], [28, 2, 1, "", "from_bincode"], [28, 2, 1, "", "from_json"], [28, 2, 1, "", "get"], [28, 2, 1, "", "hermitian_conjugate"], [28, 2, 1, "", "is_empty"], [28, 2, 1, "", "jordan_wigner"], [28, 2, 1, "", "json_schema"], [28, 2, 1, "", "keys"], [28, 2, 1, "", "min_supported_version"], [28, 2, 1, "", "remove"], [28, 2, 1, "", "set"], [28, 2, 1, "", "to_bincode"], [28, 2, 1, "", "to_json"], [28, 2, 1, "", "truncate"], [28, 2, 1, "", "values"]], "struqture_py.fermions.FermionLindbladNoiseOperator": [[7, 2, 1, "", "__init__"], [28, 2, 1, "", "add_operator_product"], [28, 2, 1, "", "current_number_modes"], [28, 2, 1, "", "current_version"], [28, 2, 1, "", "empty_clone"], [28, 2, 1, "", "from_bincode"], [28, 2, 1, "", "from_json"], [28, 2, 1, "", "get"], [28, 2, 1, "", "is_empty"], [28, 2, 1, "", "jordan_wigner"], [28, 2, 1, "", "json_schema"], [28, 2, 1, "", "keys"], [28, 2, 1, "", "min_supported_version"], [28, 2, 1, "", "remove"], [28, 2, 1, "", "set"], [28, 2, 1, "", "to_bincode"], [28, 2, 1, "", "to_json"], [28, 2, 1, "", "truncate"], [28, 2, 1, "", "values"]], "struqture_py.fermions.FermionLindbladOpenSystem": [[8, 2, 1, "", "__init__"], [28, 2, 1, "", "current_number_modes"], [28, 2, 1, "", "current_version"], [28, 2, 1, "", "empty_clone"], [28, 2, 1, "", "from_bincode"], [28, 2, 1, "", "from_json"], [28, 2, 1, "", "group"], [28, 2, 1, "", "jordan_wigner"], [28, 2, 1, "", "json_schema"], [28, 2, 1, "", "min_supported_version"], [28, 2, 1, "", "noise"], [28, 2, 1, "", "noise_add_operator_product"], [28, 2, 1, "", "noise_get"], [28, 2, 1, "", "noise_set"], [28, 2, 1, "", "system"], [28, 2, 1, "", "system_add_operator_product"], [28, 2, 1, "", "system_get"], [28, 2, 1, "", "system_set"], [28, 2, 1, "", "to_bincode"], [28, 2, 1, "", "to_json"], [28, 2, 1, "", "truncate"], [28, 2, 1, "", "ungroup"]], "struqture_py.fermions.FermionOperator": [[9, 2, 1, "", "__init__"], [28, 2, 1, "", "add_operator_product"], [28, 2, 1, "", "current_number_modes"], [28, 2, 1, "", "current_version"], [28, 2, 1, "", "empty_clone"], [28, 2, 1, "", "from_bincode"], [28, 2, 1, "", "from_json"], [28, 2, 1, "", "get"], [28, 2, 1, "", "hermitian_conjugate"], [28, 2, 1, "", "is_empty"], [28, 2, 1, "", "jordan_wigner"], [28, 2, 1, "", "json_schema"], [28, 2, 1, "", "keys"], [28, 2, 1, "", "min_supported_version"], [28, 2, 1, "", "remove"], [28, 2, 1, "", "set"], [28, 2, 1, "", "to_bincode"], [28, 2, 1, "", "to_json"], [28, 2, 1, "", "truncate"], [28, 2, 1, "", "values"]], "struqture_py.fermions.FermionProduct": [[10, 2, 1, "", "__init__"], [28, 2, 1, "", "annihilators"], [28, 2, 1, "", "create_valid_pair"], [28, 2, 1, "", "creators"], [28, 2, 1, "", "current_number_modes"], [28, 2, 1, "", "current_version"], [28, 2, 1, "", "from_bincode"], [28, 2, 1, "", "from_json"], [28, 2, 1, "", "from_string"], [28, 2, 1, "", "hermitian_conjugate"], [28, 2, 1, "", "is_natural_hermitian"], [28, 2, 1, "", "jordan_wigner"], [28, 2, 1, "", "json_schema"], [28, 2, 1, "", "min_supported_version"], [28, 2, 1, "", "number_annihilators"], [28, 2, 1, "", "number_creators"], [28, 2, 1, "", "remap_modes"], [28, 2, 1, "", "to_bincode"], [28, 2, 1, "", "to_json"]], "struqture_py.fermions.HermitianFermionProduct": [[11, 2, 1, "", "__init__"], [28, 2, 1, "", "annihilators"], [28, 2, 1, "", "create_valid_pair"], [28, 2, 1, "", "creators"], [28, 2, 1, "", "current_number_modes"], [28, 2, 1, "", "current_version"], [28, 2, 1, "", "from_bincode"], [28, 2, 1, "", "from_json"], [28, 2, 1, "", "from_string"], [28, 2, 1, "", "hermitian_conjugate"], [28, 2, 1, "", "is_natural_hermitian"], [28, 2, 1, "", "jordan_wigner"], [28, 2, 1, "", "json_schema"], [28, 2, 1, "", "min_supported_version"], [28, 2, 1, "", "number_annihilators"], [28, 2, 1, "", "number_creators"], [28, 2, 1, "", "remap_modes"], [28, 2, 1, "", "to_bincode"], [28, 2, 1, "", "to_json"]], "struqture_py.mixed_systems": [[29, 1, 1, "", "HermitianMixedProduct"], [29, 1, 1, "", "MixedDecoherenceProduct"], [29, 1, 1, "", "MixedHamiltonian"], [29, 1, 1, "", "MixedLindbladNoiseOperator"], [29, 1, 1, "", "MixedLindbladOpenSystem"], [29, 1, 1, "", "MixedOperator"], [29, 1, 1, "", "MixedPlusMinusOperator"], [29, 1, 1, "", "MixedPlusMinusProduct"], [29, 1, 1, "", "MixedProduct"]], "struqture_py.mixed_systems.HermitianMixedProduct": [[12, 2, 1, "", "__init__"], [29, 2, 1, "", "bosons"], [29, 2, 1, "", "create_valid_pair"], [29, 2, 1, "", "current_number_bosonic_modes"], [29, 2, 1, "", "current_number_fermionic_modes"], [29, 2, 1, "", "current_number_spins"], [29, 2, 1, "", "current_version"], [29, 2, 1, "", "fermions"], [29, 2, 1, "", "from_bincode"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "from_string"], [29, 2, 1, "", "hermitian_conjugate"], [29, 2, 1, "", "is_natural_hermitian"], [29, 2, 1, "", "json_schema"], [29, 2, 1, "", "min_supported_version"], [29, 2, 1, "", "spins"], [29, 2, 1, "", "to_bincode"], [29, 2, 1, "", "to_json"]], "struqture_py.mixed_systems.MixedDecoherenceProduct": [[13, 2, 1, "", "__init__"], [29, 2, 1, "", "bosons"], [29, 2, 1, "", "create_valid_pair"], [29, 2, 1, "", "current_number_bosonic_modes"], [29, 2, 1, "", "current_number_fermionic_modes"], [29, 2, 1, "", "current_number_spins"], [29, 2, 1, "", "current_version"], [29, 2, 1, "", "fermions"], [29, 2, 1, "", "from_bincode"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "from_string"], [29, 2, 1, "", "hermitian_conjugate"], [29, 2, 1, "", "is_natural_hermitian"], [29, 2, 1, "", "json_schema"], [29, 2, 1, "", "min_supported_version"], [29, 2, 1, "", "spins"], [29, 2, 1, "", "to_bincode"], [29, 2, 1, "", "to_json"]], "struqture_py.mixed_systems.MixedHamiltonian": [[14, 2, 1, "", "__init__"], [29, 2, 1, "", "add_operator_product"], [29, 2, 1, "", "current_number_bosonic_modes"], [29, 2, 1, "", "current_number_fermionic_modes"], [29, 2, 1, "", "current_number_spins"], [29, 2, 1, "", "current_version"], [29, 2, 1, "", "empty_clone"], [29, 2, 1, "", "from_bincode"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "get"], [29, 2, 1, "", "hermitian_conjugate"], [29, 2, 1, "", "is_empty"], [29, 2, 1, "", "json_schema"], [29, 2, 1, "", "keys"], [29, 2, 1, "", "min_supported_version"], [29, 2, 1, "", "remove"], [29, 2, 1, "", "set"], [29, 2, 1, "", "to_bincode"], [29, 2, 1, "", "to_json"], [29, 2, 1, "", "truncate"], [29, 2, 1, "", "values"]], "struqture_py.mixed_systems.MixedLindbladNoiseOperator": [[15, 2, 1, "", "__init__"], [29, 2, 1, "", "add_operator_product"], [29, 2, 1, "", "current_number_bosonic_modes"], [29, 2, 1, "", "current_number_fermionic_modes"], [29, 2, 1, "", "current_number_spins"], [29, 2, 1, "", "current_version"], [29, 2, 1, "", "empty_clone"], [29, 2, 1, "", "from_bincode"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "get"], [29, 2, 1, "", "is_empty"], [29, 2, 1, "", "json_schema"], [29, 2, 1, "", "keys"], [29, 2, 1, "", "min_supported_version"], [29, 2, 1, "", "remove"], [29, 2, 1, "", "set"], [29, 2, 1, "", "to_bincode"], [29, 2, 1, "", "to_json"], [29, 2, 1, "", "truncate"], [29, 2, 1, "", "values"]], "struqture_py.mixed_systems.MixedLindbladOpenSystem": [[16, 2, 1, "", "__init__"], [29, 2, 1, "", "current_number_bosonic_modes"], [29, 2, 1, "", "current_number_fermionic_modes"], [29, 2, 1, "", "current_number_spins"], [29, 2, 1, "", "current_version"], [29, 2, 1, "", "empty_clone"], [29, 2, 1, "", "from_bincode"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "group"], [29, 2, 1, "", "json_schema"], [29, 2, 1, "", "min_supported_version"], [29, 2, 1, "", "noise"], [29, 2, 1, "", "noise_add_operator_product"], [29, 2, 1, "", "noise_get"], [29, 2, 1, "", "noise_set"], [29, 2, 1, "", "system"], [29, 2, 1, "", "system_add_operator_product"], [29, 2, 1, "", "system_get"], [29, 2, 1, "", "system_set"], [29, 2, 1, "", "to_bincode"], [29, 2, 1, "", "to_json"], [29, 2, 1, "", "truncate"], [29, 2, 1, "", "ungroup"]], "struqture_py.mixed_systems.MixedOperator": [[17, 2, 1, "", "__init__"], [29, 2, 1, "", "add_operator_product"], [29, 2, 1, "", "current_number_bosonic_modes"], [29, 2, 1, "", "current_number_fermionic_modes"], [29, 2, 1, "", "current_number_spins"], [29, 2, 1, "", "current_version"], [29, 2, 1, "", "empty_clone"], [29, 2, 1, "", "from_bincode"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "get"], [29, 2, 1, "", "hermitian_conjugate"], [29, 2, 1, "", "is_empty"], [29, 2, 1, "", "json_schema"], [29, 2, 1, "", "keys"], [29, 2, 1, "", "min_supported_version"], [29, 2, 1, "", "remove"], [29, 2, 1, "", "set"], [29, 2, 1, "", "to_bincode"], [29, 2, 1, "", "to_json"], [29, 2, 1, "", "truncate"], [29, 2, 1, "", "values"]], "struqture_py.mixed_systems.MixedPlusMinusOperator": [[18, 2, 1, "", "__init__"], [29, 2, 1, "", "add_operator_product"], [29, 2, 1, "", "current_number_bosonic_modes"], [29, 2, 1, "", "current_number_fermionic_modes"], [29, 2, 1, "", "current_number_spins"], [29, 2, 1, "", "current_version"], [29, 2, 1, "", "empty_clone"], [29, 2, 1, "", "from_bincode"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "from_mixed_system"], [29, 2, 1, "", "get"], [29, 2, 1, "", "hermitian_conjugate"], [29, 2, 1, "", "is_empty"], [29, 2, 1, "", "json_schema"], [29, 2, 1, "", "keys"], [29, 2, 1, "", "min_supported_version"], [29, 2, 1, "", "remove"], [29, 2, 1, "", "set"], [29, 2, 1, "", "to_bincode"], [29, 2, 1, "", "to_json"], [29, 2, 1, "", "to_mixed_system"], [29, 2, 1, "", "truncate"], [29, 2, 1, "", "values"]], "struqture_py.mixed_systems.MixedPlusMinusProduct": [[19, 2, 1, "", "__init__"], [29, 2, 1, "", "bosons"], [29, 2, 1, "", "current_number_bosonic_modes"], [29, 2, 1, "", "current_number_fermionic_modes"], [29, 2, 1, "", "current_number_spins"], [29, 2, 1, "", "current_version"], [29, 2, 1, "", "fermions"], [29, 2, 1, "", "from_bincode"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "from_mixed_product"], [29, 2, 1, "", "from_string"], [29, 2, 1, "", "hermitian_conjugate"], [29, 2, 1, "", "is_natural_hermitian"], [29, 2, 1, "", "json_schema"], [29, 2, 1, "", "min_supported_version"], [29, 2, 1, "", "spins"], [29, 2, 1, "", "to_bincode"], [29, 2, 1, "", "to_json"], [29, 2, 1, "", "to_mixed_product_list"]], "struqture_py.mixed_systems.MixedProduct": [[20, 2, 1, "", "__init__"], [29, 2, 1, "", "bosons"], [29, 2, 1, "", "create_valid_pair"], [29, 2, 1, "", "current_number_bosonic_modes"], [29, 2, 1, "", "current_number_fermionic_modes"], [29, 2, 1, "", "current_number_spins"], [29, 2, 1, "", "current_version"], [29, 2, 1, "", "fermions"], [29, 2, 1, "", "from_bincode"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "from_string"], [29, 2, 1, "", "hermitian_conjugate"], [29, 2, 1, "", "is_natural_hermitian"], [29, 2, 1, "", "json_schema"], [29, 2, 1, "", "min_supported_version"], [29, 2, 1, "", "spins"], [29, 2, 1, "", "to_bincode"], [29, 2, 1, "", "to_json"]], "struqture_py.spins": [[30, 1, 1, "", "DecoherenceProduct"], [30, 1, 1, "", "PauliProduct"], [30, 1, 1, "", "PlusMinusLindbladNoiseOperator"], [30, 1, 1, "", "PlusMinusOperator"], [30, 1, 1, "", "PlusMinusProduct"], [30, 1, 1, "", "QubitHamiltonian"], [30, 1, 1, "", "QubitLindbladNoiseOperator"], [30, 1, 1, "", "QubitLindbladOpenSystem"], [30, 1, 1, "", "QubitOperator"]], "struqture_py.spins.DecoherenceProduct": [[21, 2, 1, "", "__init__"], [30, 2, 1, "", "concatenate"], [30, 2, 1, "", "current_number_spins"], [30, 2, 1, "", "current_version"], [30, 2, 1, "", "from_bincode"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "from_string"], [30, 2, 1, "", "get"], [30, 2, 1, "", "hermitian_conjugate"], [30, 2, 1, "", "is_empty"], [30, 2, 1, "", "is_natural_hermitian"], [30, 2, 1, "", "iy"], [30, 2, 1, "", "jordan_wigner"], [30, 2, 1, "", "json_schema"], [30, 2, 1, "", "keys"], [30, 2, 1, "", "min_supported_version"], [30, 2, 1, "", "multiply"], [30, 2, 1, "", "remap_qubits"], [30, 2, 1, "", "set_pauli"], [30, 2, 1, "", "to_bincode"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "x"], [30, 2, 1, "", "z"]], "struqture_py.spins.PauliProduct": [[22, 2, 1, "", "__init__"], [30, 2, 1, "", "concatenate"], [30, 2, 1, "", "current_number_spins"], [30, 2, 1, "", "current_version"], [30, 2, 1, "", "from_bincode"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "from_string"], [30, 2, 1, "", "get"], [30, 2, 1, "", "hermitian_conjugate"], [30, 2, 1, "", "is_empty"], [30, 2, 1, "", "is_natural_hermitian"], [30, 2, 1, "", "jordan_wigner"], [30, 2, 1, "", "json_schema"], [30, 2, 1, "", "keys"], [30, 2, 1, "", "min_supported_version"], [30, 2, 1, "", "multiply"], [30, 2, 1, "", "remap_qubits"], [30, 2, 1, "", "set_pauli"], [30, 2, 1, "", "to_bincode"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "x"], [30, 2, 1, "", "y"], [30, 2, 1, "", "z"]], "struqture_py.spins.PlusMinusLindbladNoiseOperator": [[30, 2, 1, "", "add_operator_product"], [30, 2, 1, "", "current_version"], [30, 2, 1, "", "empty_clone"], [30, 2, 1, "", "from_bincode"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "from_qubit_noise_operator"], [30, 2, 1, "", "get"], [30, 2, 1, "", "is_empty"], [30, 2, 1, "", "jordan_wigner"], [30, 2, 1, "", "json_schema"], [30, 2, 1, "", "keys"], [30, 2, 1, "", "min_supported_version"], [30, 2, 1, "", "remove"], [30, 2, 1, "", "set"], [30, 2, 1, "", "to_bincode"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "to_qubit_noise_operator"], [30, 2, 1, "", "truncate"], [30, 2, 1, "", "values"]], "struqture_py.spins.PlusMinusOperator": [[30, 2, 1, "", "add_operator_product"], [30, 2, 1, "", "current_number_spins"], [30, 2, 1, "", "current_version"], [30, 2, 1, "", "empty_clone"], [30, 2, 1, "", "from_bincode"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "from_qubit_hamiltonian"], [30, 2, 1, "", "from_qubit_operator"], [30, 2, 1, "", "get"], [30, 2, 1, "", "hermitian_conjugate"], [30, 2, 1, "", "is_empty"], [30, 2, 1, "", "jordan_wigner"], [30, 2, 1, "", "json_schema"], [30, 2, 1, "", "keys"], [30, 2, 1, "", "min_supported_version"], [30, 2, 1, "", "remove"], [30, 2, 1, "", "set"], [30, 2, 1, "", "to_bincode"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "to_qubit_hamiltonian"], [30, 2, 1, "", "to_qubit_operator"], [30, 2, 1, "", "truncate"], [30, 2, 1, "", "values"]], "struqture_py.spins.PlusMinusProduct": [[30, 2, 1, "", "concatenate"], [30, 2, 1, "", "current_number_spins"], [30, 2, 1, "", "current_version"], [30, 2, 1, "", "from_bincode"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "from_product"], [30, 2, 1, "", "from_string"], [30, 2, 1, "", "get"], [30, 2, 1, "", "hermitian_conjugate"], [30, 2, 1, "", "is_empty"], [30, 2, 1, "", "is_natural_hermitian"], [30, 2, 1, "", "jordan_wigner"], [30, 2, 1, "", "json_schema"], [30, 2, 1, "", "keys"], [30, 2, 1, "", "min_supported_version"], [30, 2, 1, "", "minus"], [30, 2, 1, "", "plus"], [30, 2, 1, "", "remap_qubits"], [30, 2, 1, "", "set_pauli"], [30, 2, 1, "", "to_bincode"], [30, 2, 1, "", "to_decoherence_product_list"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "to_pauli_product_list"], [30, 2, 1, "", "z"]], "struqture_py.spins.QubitHamiltonian": [[23, 2, 1, "", "__init__"], [30, 2, 1, "", "add_operator_product"], [30, 2, 1, "", "current_number_spins"], [30, 2, 1, "", "current_version"], [30, 2, 1, "", "empty_clone"], [30, 2, 1, "", "from_bincode"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "get"], [30, 2, 1, "", "hermitian_conjugate"], [30, 2, 1, "", "is_empty"], [30, 2, 1, "", "jordan_wigner"], [30, 2, 1, "", "json_schema"], [30, 2, 1, "", "keys"], [30, 2, 1, "", "min_supported_version"], [30, 2, 1, "", "remove"], [30, 2, 1, "", "set"], [30, 2, 1, "", "sparse_lindblad_entries"], [30, 2, 1, "", "sparse_matrix_coo"], [30, 2, 1, "", "sparse_matrix_superoperator_coo"], [30, 2, 1, "", "to_bincode"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "truncate"], [30, 2, 1, "", "unitary_sparse_matrix_coo"], [30, 2, 1, "", "values"]], "struqture_py.spins.QubitLindbladNoiseOperator": [[24, 2, 1, "", "__init__"], [30, 2, 1, "", "add_operator_product"], [30, 2, 1, "", "current_number_spins"], [30, 2, 1, "", "current_version"], [30, 2, 1, "", "empty_clone"], [30, 2, 1, "", "from_bincode"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "get"], [30, 2, 1, "", "is_empty"], [30, 2, 1, "", "jordan_wigner"], [30, 2, 1, "", "json_schema"], [30, 2, 1, "", "keys"], [30, 2, 1, "", "min_supported_version"], [30, 2, 1, "", "remove"], [30, 2, 1, "", "separate_into_n_terms"], [30, 2, 1, "", "set"], [30, 2, 1, "", "sparse_lindblad_entries"], [30, 2, 1, "", "sparse_matrix_superoperator_coo"], [30, 2, 1, "", "to_bincode"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "truncate"], [30, 2, 1, "", "unitary_sparse_matrix_coo"], [30, 2, 1, "", "values"]], "struqture_py.spins.QubitLindbladOpenSystem": [[25, 2, 1, "", "__init__"], [30, 2, 1, "", "current_number_spins"], [30, 2, 1, "", "current_version"], [30, 2, 1, "", "empty_clone"], [30, 2, 1, "", "from_bincode"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "group"], [30, 2, 1, "", "jordan_wigner"], [30, 2, 1, "", "json_schema"], [30, 2, 1, "", "min_supported_version"], [30, 2, 1, "", "noise"], [30, 2, 1, "", "noise_add_operator_product"], [30, 2, 1, "", "noise_get"], [30, 2, 1, "", "noise_set"], [30, 2, 1, "", "sparse_lindblad_entries"], [30, 2, 1, "", "sparse_matrix_superoperator_coo"], [30, 2, 1, "", "system"], [30, 2, 1, "", "system_add_operator_product"], [30, 2, 1, "", "system_get"], [30, 2, 1, "", "system_set"], [30, 2, 1, "", "to_bincode"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "truncate"], [30, 2, 1, "", "ungroup"], [30, 2, 1, "", "unitary_sparse_matrix_coo"]], "struqture_py.spins.QubitOperator": [[26, 2, 1, "", "__init__"], [30, 2, 1, "", "add_operator_product"], [30, 2, 1, "", "current_number_spins"], [30, 2, 1, "", "current_version"], [30, 2, 1, "", "empty_clone"], [30, 2, 1, "", "from_bincode"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "get"], [30, 2, 1, "", "hermitian_conjugate"], [30, 2, 1, "", "is_empty"], [30, 2, 1, "", "jordan_wigner"], [30, 2, 1, "", "json_schema"], [30, 2, 1, "", "keys"], [30, 2, 1, "", "min_supported_version"], [30, 2, 1, "", "remove"], [30, 2, 1, "", "set"], [30, 2, 1, "", "sparse_lindblad_entries"], [30, 2, 1, "", "sparse_matrix_coo"], [30, 2, 1, "", "sparse_matrix_superoperator_coo"], [30, 2, 1, "", "to_bincode"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "truncate"], [30, 2, 1, "", "unitary_sparse_matrix_coo"], [30, 2, 1, "", "values"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"struqture_pi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "boson": [0, 1, 2, 3, 4, 5, 27], "bosonhamiltonian": 0, "bosonlindbladnoiseoper": 1, "bosonlindbladopensystem": 2, "bosonoper": 3, "bosonproduct": 4, "exampl": [4, 27], "hermitianbosonproduct": 5, "fermion": [6, 7, 8, 9, 10, 11, 28], "fermionhamiltonian": 6, "fermionlindbladnoiseoper": 7, "fermionlindbladopensystem": 8, "fermionoper": 9, "fermionproduct": 10, "hermitianfermionproduct": 11, "mixed_system": [12, 13, 14, 15, 16, 17, 18, 19, 20, 29], "hermitianmixedproduct": 12, "mixeddecoherenceproduct": 13, "mixedhamiltonian": 14, "mixedlindbladnoiseoper": 15, "mixedlindbladopensystem": 16, "mixedoper": 17, "mixedplusminusoper": 18, "mixedplusminusproduct": 19, "mixedproduct": 20, "spin": [21, 22, 23, 24, 25, 26, 30], "decoherenceproduct": 21, "pauliproduct": 22, "qubithamiltonian": 23, "qubitlindbladnoiseoper": 24, "qubitlindbladopensystem": 25, "qubitoper": 26, "welcom": 32, "": 32, "document": [32, 33], "content": 32, "index": 32}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"struqture_py.bosons.BosonHamiltonian": [[0, "struqture-py-bosons-bosonhamiltonian"]], "struqture_py.bosons.BosonLindbladNoiseOperator": [[1, "struqture-py-bosons-bosonlindbladnoiseoperator"]], "struqture_py.bosons.BosonLindbladOpenSystem": [[2, "struqture-py-bosons-bosonlindbladopensystem"]], "struqture_py.bosons.BosonOperator": [[3, "struqture-py-bosons-bosonoperator"]], "struqture_py.bosons.BosonProduct": [[4, "struqture-py-bosons-bosonproduct"]], "Example:": [[4, "example"], [27, "example"]], "struqture_py.bosons.HermitianBosonProduct": [[5, "struqture-py-bosons-hermitianbosonproduct"]], "struqture_py.fermions.FermionHamiltonian": [[6, "struqture-py-fermions-fermionhamiltonian"]], "struqture_py.fermions.FermionLindbladNoiseOperator": [[7, "struqture-py-fermions-fermionlindbladnoiseoperator"]], "struqture_py.fermions.FermionLindbladOpenSystem": [[8, "struqture-py-fermions-fermionlindbladopensystem"]], "struqture_py.fermions.FermionOperator": [[9, "struqture-py-fermions-fermionoperator"]], "struqture_py.fermions.FermionProduct": [[10, "struqture-py-fermions-fermionproduct"]], "struqture_py.fermions.HermitianFermionProduct": [[11, "struqture-py-fermions-hermitianfermionproduct"]], "struqture_py.mixed_systems.HermitianMixedProduct": [[12, "struqture-py-mixed-systems-hermitianmixedproduct"]], "struqture_py.mixed_systems.MixedDecoherenceProduct": [[13, "struqture-py-mixed-systems-mixeddecoherenceproduct"]], "struqture_py.mixed_systems.MixedHamiltonian": [[14, "struqture-py-mixed-systems-mixedhamiltonian"]], "struqture_py.mixed_systems.MixedLindbladNoiseOperator": [[15, "struqture-py-mixed-systems-mixedlindbladnoiseoperator"]], "struqture_py.mixed_systems.MixedLindbladOpenSystem": [[16, "struqture-py-mixed-systems-mixedlindbladopensystem"]], "struqture_py.mixed_systems.MixedOperator": [[17, "struqture-py-mixed-systems-mixedoperator"]], "struqture_py.mixed_systems.MixedPlusMinusOperator": [[18, "struqture-py-mixed-systems-mixedplusminusoperator"]], "struqture_py.mixed_systems.MixedPlusMinusProduct": [[19, "struqture-py-mixed-systems-mixedplusminusproduct"]], "struqture_py.mixed_systems.MixedProduct": [[20, "struqture-py-mixed-systems-mixedproduct"]], "struqture_py.spins.DecoherenceProduct": [[21, "struqture-py-spins-decoherenceproduct"]], "struqture_py.spins.PauliProduct": [[22, "struqture-py-spins-pauliproduct"]], "struqture_py.spins.QubitHamiltonian": [[23, "struqture-py-spins-qubithamiltonian"]], "struqture_py.spins.QubitLindbladNoiseOperator": [[24, "struqture-py-spins-qubitlindbladnoiseoperator"]], "struqture_py.spins.QubitLindbladOpenSystem": [[25, "struqture-py-spins-qubitlindbladopensystem"]], "struqture_py.spins.QubitOperator": [[26, "struqture-py-spins-qubitoperator"]], "struqture_py.bosons": [[27, "module-struqture_py.bosons"]], "struqture_py.fermions": [[28, "module-struqture_py.fermions"]], "struqture_py.mixed_systems": [[29, "module-struqture_py.mixed_systems"]], "struqture_py.spins": [[30, "module-struqture_py.spins"]], "struqture_py": [[31, "module-struqture_py"]], "Welcome to struqture_py's documentation!": [[32, "welcome-to-struqture-py-s-documentation"]], "Contents:": [[32, null]], "Documentation Index": [[32, "documentation-index"]], "struqture_py documentation": [[33, "struqture-py-documentation"]]}, "indexentries": {"bosonhamiltonian (class in struqture_py.bosons)": [[0, "struqture_py.bosons.BosonHamiltonian"], [27, "struqture_py.bosons.BosonHamiltonian"]], "__init__() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.__init__"]], "add_operator_product() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.add_operator_product"], [27, "struqture_py.bosons.BosonHamiltonian.add_operator_product"]], "current_number_modes() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.current_number_modes"], [27, "struqture_py.bosons.BosonHamiltonian.current_number_modes"]], "current_version() (struqture_py.bosons.bosonhamiltonian static method)": [[0, "struqture_py.bosons.BosonHamiltonian.current_version"], [27, "struqture_py.bosons.BosonHamiltonian.current_version"]], "empty_clone() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.empty_clone"], [27, "struqture_py.bosons.BosonHamiltonian.empty_clone"]], "from_bincode() (struqture_py.bosons.bosonhamiltonian static method)": [[0, "struqture_py.bosons.BosonHamiltonian.from_bincode"], [27, "struqture_py.bosons.BosonHamiltonian.from_bincode"]], "from_json() (struqture_py.bosons.bosonhamiltonian static method)": [[0, "struqture_py.bosons.BosonHamiltonian.from_json"], [27, "struqture_py.bosons.BosonHamiltonian.from_json"]], "get() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.get"], [27, "struqture_py.bosons.BosonHamiltonian.get"]], "hermitian_conjugate() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.hermitian_conjugate"], [27, "struqture_py.bosons.BosonHamiltonian.hermitian_conjugate"]], "is_empty() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.is_empty"], [27, "struqture_py.bosons.BosonHamiltonian.is_empty"]], "json_schema() (struqture_py.bosons.bosonhamiltonian static method)": [[0, "struqture_py.bosons.BosonHamiltonian.json_schema"], [27, "struqture_py.bosons.BosonHamiltonian.json_schema"]], "keys() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.keys"], [27, "struqture_py.bosons.BosonHamiltonian.keys"]], "min_supported_version() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.min_supported_version"], [27, "struqture_py.bosons.BosonHamiltonian.min_supported_version"]], "remove() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.remove"], [27, "struqture_py.bosons.BosonHamiltonian.remove"]], "set() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.set"], [27, "struqture_py.bosons.BosonHamiltonian.set"]], "to_bincode() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.to_bincode"], [27, "struqture_py.bosons.BosonHamiltonian.to_bincode"]], "to_json() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.to_json"], [27, "struqture_py.bosons.BosonHamiltonian.to_json"]], "truncate() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.truncate"], [27, "struqture_py.bosons.BosonHamiltonian.truncate"]], "values() (struqture_py.bosons.bosonhamiltonian method)": [[0, "struqture_py.bosons.BosonHamiltonian.values"], [27, "struqture_py.bosons.BosonHamiltonian.values"]], "bosonlindbladnoiseoperator (class in struqture_py.bosons)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator"]], "__init__() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.__init__"]], "add_operator_product() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.add_operator_product"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.add_operator_product"]], "current_number_modes() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.current_number_modes"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.current_number_modes"]], "current_version() (struqture_py.bosons.bosonlindbladnoiseoperator static method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.current_version"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.current_version"]], "empty_clone() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.empty_clone"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.empty_clone"]], "from_bincode() (struqture_py.bosons.bosonlindbladnoiseoperator static method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.from_bincode"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.from_bincode"]], "from_json() (struqture_py.bosons.bosonlindbladnoiseoperator static method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.from_json"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.from_json"]], "get() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.get"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.get"]], "is_empty() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.is_empty"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.is_empty"]], "json_schema() (struqture_py.bosons.bosonlindbladnoiseoperator static method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.json_schema"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.json_schema"]], "keys() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.keys"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.keys"]], "min_supported_version() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.min_supported_version"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.min_supported_version"]], "remove() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.remove"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.remove"]], "set() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.set"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.set"]], "to_bincode() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.to_bincode"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.to_bincode"]], "to_json() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.to_json"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.to_json"]], "truncate() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.truncate"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.truncate"]], "values() (struqture_py.bosons.bosonlindbladnoiseoperator method)": [[1, "struqture_py.bosons.BosonLindbladNoiseOperator.values"], [27, "struqture_py.bosons.BosonLindbladNoiseOperator.values"]], "bosonlindbladopensystem (class in struqture_py.bosons)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem"], [27, "struqture_py.bosons.BosonLindbladOpenSystem"]], "__init__() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.__init__"]], "current_number_modes() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.current_number_modes"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.current_number_modes"]], "current_version() (struqture_py.bosons.bosonlindbladopensystem static method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.current_version"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.current_version"]], "empty_clone() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.empty_clone"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.empty_clone"]], "from_bincode() (struqture_py.bosons.bosonlindbladopensystem static method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.from_bincode"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.from_bincode"]], "from_json() (struqture_py.bosons.bosonlindbladopensystem static method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.from_json"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.from_json"]], "group() (struqture_py.bosons.bosonlindbladopensystem static method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.group"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.group"]], "json_schema() (struqture_py.bosons.bosonlindbladopensystem static method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.json_schema"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.json_schema"]], "min_supported_version() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.min_supported_version"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.min_supported_version"]], "noise() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.noise"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.noise"]], "noise_add_operator_product() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.noise_add_operator_product"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.noise_add_operator_product"]], "noise_get() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.noise_get"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.noise_get"]], "noise_set() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.noise_set"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.noise_set"]], "system() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.system"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.system"]], "system_add_operator_product() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.system_add_operator_product"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.system_add_operator_product"]], "system_get() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.system_get"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.system_get"]], "system_set() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.system_set"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.system_set"]], "to_bincode() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.to_bincode"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.to_bincode"]], "to_json() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.to_json"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.to_json"]], "truncate() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.truncate"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.truncate"]], "ungroup() (struqture_py.bosons.bosonlindbladopensystem method)": [[2, "struqture_py.bosons.BosonLindbladOpenSystem.ungroup"], [27, "struqture_py.bosons.BosonLindbladOpenSystem.ungroup"]], "bosonoperator (class in struqture_py.bosons)": [[3, "struqture_py.bosons.BosonOperator"], [27, "struqture_py.bosons.BosonOperator"]], "__init__() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.__init__"]], "add_operator_product() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.add_operator_product"], [27, "struqture_py.bosons.BosonOperator.add_operator_product"]], "current_number_modes() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.current_number_modes"], [27, "struqture_py.bosons.BosonOperator.current_number_modes"]], "current_version() (struqture_py.bosons.bosonoperator static method)": [[3, "struqture_py.bosons.BosonOperator.current_version"], [27, "struqture_py.bosons.BosonOperator.current_version"]], "empty_clone() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.empty_clone"], [27, "struqture_py.bosons.BosonOperator.empty_clone"]], "from_bincode() (struqture_py.bosons.bosonoperator static method)": [[3, "struqture_py.bosons.BosonOperator.from_bincode"], [27, "struqture_py.bosons.BosonOperator.from_bincode"]], "from_json() (struqture_py.bosons.bosonoperator static method)": [[3, "struqture_py.bosons.BosonOperator.from_json"], [27, "struqture_py.bosons.BosonOperator.from_json"]], "get() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.get"], [27, "struqture_py.bosons.BosonOperator.get"]], "hermitian_conjugate() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.hermitian_conjugate"], [27, "struqture_py.bosons.BosonOperator.hermitian_conjugate"]], "is_empty() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.is_empty"], [27, "struqture_py.bosons.BosonOperator.is_empty"]], "json_schema() (struqture_py.bosons.bosonoperator static method)": [[3, "struqture_py.bosons.BosonOperator.json_schema"], [27, "struqture_py.bosons.BosonOperator.json_schema"]], "keys() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.keys"], [27, "struqture_py.bosons.BosonOperator.keys"]], "min_supported_version() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.min_supported_version"], [27, "struqture_py.bosons.BosonOperator.min_supported_version"]], "remove() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.remove"], [27, "struqture_py.bosons.BosonOperator.remove"]], "set() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.set"], [27, "struqture_py.bosons.BosonOperator.set"]], "to_bincode() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.to_bincode"], [27, "struqture_py.bosons.BosonOperator.to_bincode"]], "to_json() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.to_json"], [27, "struqture_py.bosons.BosonOperator.to_json"]], "truncate() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.truncate"], [27, "struqture_py.bosons.BosonOperator.truncate"]], "values() (struqture_py.bosons.bosonoperator method)": [[3, "struqture_py.bosons.BosonOperator.values"], [27, "struqture_py.bosons.BosonOperator.values"]], "bosonproduct (class in struqture_py.bosons)": [[4, "struqture_py.bosons.BosonProduct"], [27, "struqture_py.bosons.BosonProduct"]], "__init__() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.__init__"]], "annihilators() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.annihilators"], [27, "struqture_py.bosons.BosonProduct.annihilators"]], "create_valid_pair() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.create_valid_pair"], [27, "struqture_py.bosons.BosonProduct.create_valid_pair"]], "creators() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.creators"], [27, "struqture_py.bosons.BosonProduct.creators"]], "current_number_modes() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.current_number_modes"], [27, "struqture_py.bosons.BosonProduct.current_number_modes"]], "current_version() (struqture_py.bosons.bosonproduct static method)": [[4, "struqture_py.bosons.BosonProduct.current_version"], [27, "struqture_py.bosons.BosonProduct.current_version"]], "from_bincode() (struqture_py.bosons.bosonproduct static method)": [[4, "struqture_py.bosons.BosonProduct.from_bincode"], [27, "struqture_py.bosons.BosonProduct.from_bincode"]], "from_json() (struqture_py.bosons.bosonproduct static method)": [[4, "struqture_py.bosons.BosonProduct.from_json"], [27, "struqture_py.bosons.BosonProduct.from_json"]], "from_string() (struqture_py.bosons.bosonproduct static method)": [[4, "struqture_py.bosons.BosonProduct.from_string"], [27, "struqture_py.bosons.BosonProduct.from_string"]], "hermitian_conjugate() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.hermitian_conjugate"], [27, "struqture_py.bosons.BosonProduct.hermitian_conjugate"]], "is_natural_hermitian() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.is_natural_hermitian"], [27, "struqture_py.bosons.BosonProduct.is_natural_hermitian"]], "json_schema() (struqture_py.bosons.bosonproduct static method)": [[4, "struqture_py.bosons.BosonProduct.json_schema"], [27, "struqture_py.bosons.BosonProduct.json_schema"]], "min_supported_version() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.min_supported_version"], [27, "struqture_py.bosons.BosonProduct.min_supported_version"]], "number_annihilators() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.number_annihilators"], [27, "struqture_py.bosons.BosonProduct.number_annihilators"]], "number_creators() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.number_creators"], [27, "struqture_py.bosons.BosonProduct.number_creators"]], "remap_modes() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.remap_modes"], [27, "struqture_py.bosons.BosonProduct.remap_modes"]], "to_bincode() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.to_bincode"], [27, "struqture_py.bosons.BosonProduct.to_bincode"]], "to_json() (struqture_py.bosons.bosonproduct method)": [[4, "struqture_py.bosons.BosonProduct.to_json"], [27, "struqture_py.bosons.BosonProduct.to_json"]], "hermitianbosonproduct (class in struqture_py.bosons)": [[5, "struqture_py.bosons.HermitianBosonProduct"], [27, "struqture_py.bosons.HermitianBosonProduct"]], "__init__() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.__init__"]], "annihilators() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.annihilators"], [27, "struqture_py.bosons.HermitianBosonProduct.annihilators"]], "create_valid_pair() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.create_valid_pair"], [27, "struqture_py.bosons.HermitianBosonProduct.create_valid_pair"]], "creators() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.creators"], [27, "struqture_py.bosons.HermitianBosonProduct.creators"]], "current_number_modes() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.current_number_modes"], [27, "struqture_py.bosons.HermitianBosonProduct.current_number_modes"]], "current_version() (struqture_py.bosons.hermitianbosonproduct static method)": [[5, "struqture_py.bosons.HermitianBosonProduct.current_version"], [27, "struqture_py.bosons.HermitianBosonProduct.current_version"]], "from_bincode() (struqture_py.bosons.hermitianbosonproduct static method)": [[5, "struqture_py.bosons.HermitianBosonProduct.from_bincode"], [27, "struqture_py.bosons.HermitianBosonProduct.from_bincode"]], "from_json() (struqture_py.bosons.hermitianbosonproduct static method)": [[5, "struqture_py.bosons.HermitianBosonProduct.from_json"], [27, "struqture_py.bosons.HermitianBosonProduct.from_json"]], "from_string() (struqture_py.bosons.hermitianbosonproduct static method)": [[5, "struqture_py.bosons.HermitianBosonProduct.from_string"], [27, "struqture_py.bosons.HermitianBosonProduct.from_string"]], "hermitian_conjugate() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.hermitian_conjugate"], [27, "struqture_py.bosons.HermitianBosonProduct.hermitian_conjugate"]], "is_natural_hermitian() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.is_natural_hermitian"], [27, "struqture_py.bosons.HermitianBosonProduct.is_natural_hermitian"]], "json_schema() (struqture_py.bosons.hermitianbosonproduct static method)": [[5, "struqture_py.bosons.HermitianBosonProduct.json_schema"], [27, "struqture_py.bosons.HermitianBosonProduct.json_schema"]], "min_supported_version() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.min_supported_version"], [27, "struqture_py.bosons.HermitianBosonProduct.min_supported_version"]], "number_annihilators() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.number_annihilators"], [27, "struqture_py.bosons.HermitianBosonProduct.number_annihilators"]], "number_creators() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.number_creators"], [27, "struqture_py.bosons.HermitianBosonProduct.number_creators"]], "remap_modes() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.remap_modes"], [27, "struqture_py.bosons.HermitianBosonProduct.remap_modes"]], "to_bincode() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.to_bincode"], [27, "struqture_py.bosons.HermitianBosonProduct.to_bincode"]], "to_json() (struqture_py.bosons.hermitianbosonproduct method)": [[5, "struqture_py.bosons.HermitianBosonProduct.to_json"], [27, "struqture_py.bosons.HermitianBosonProduct.to_json"]], "fermionhamiltonian (class in struqture_py.fermions)": [[6, "struqture_py.fermions.FermionHamiltonian"], [28, "struqture_py.fermions.FermionHamiltonian"]], "__init__() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.__init__"]], "add_operator_product() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.add_operator_product"], [28, "struqture_py.fermions.FermionHamiltonian.add_operator_product"]], "current_number_modes() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.current_number_modes"], [28, "struqture_py.fermions.FermionHamiltonian.current_number_modes"]], "current_version() (struqture_py.fermions.fermionhamiltonian static method)": [[6, "struqture_py.fermions.FermionHamiltonian.current_version"], [28, "struqture_py.fermions.FermionHamiltonian.current_version"]], "empty_clone() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.empty_clone"], [28, "struqture_py.fermions.FermionHamiltonian.empty_clone"]], "from_bincode() (struqture_py.fermions.fermionhamiltonian static method)": [[6, "struqture_py.fermions.FermionHamiltonian.from_bincode"], [28, "struqture_py.fermions.FermionHamiltonian.from_bincode"]], "from_json() (struqture_py.fermions.fermionhamiltonian static method)": [[6, "struqture_py.fermions.FermionHamiltonian.from_json"], [28, "struqture_py.fermions.FermionHamiltonian.from_json"]], "get() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.get"], [28, "struqture_py.fermions.FermionHamiltonian.get"]], "hermitian_conjugate() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.hermitian_conjugate"], [28, "struqture_py.fermions.FermionHamiltonian.hermitian_conjugate"]], "is_empty() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.is_empty"], [28, "struqture_py.fermions.FermionHamiltonian.is_empty"]], "jordan_wigner() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.jordan_wigner"], [28, "struqture_py.fermions.FermionHamiltonian.jordan_wigner"]], "json_schema() (struqture_py.fermions.fermionhamiltonian static method)": [[6, "struqture_py.fermions.FermionHamiltonian.json_schema"], [28, "struqture_py.fermions.FermionHamiltonian.json_schema"]], "keys() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.keys"], [28, "struqture_py.fermions.FermionHamiltonian.keys"]], "min_supported_version() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.min_supported_version"], [28, "struqture_py.fermions.FermionHamiltonian.min_supported_version"]], "remove() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.remove"], [28, "struqture_py.fermions.FermionHamiltonian.remove"]], "set() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.set"], [28, "struqture_py.fermions.FermionHamiltonian.set"]], "to_bincode() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.to_bincode"], [28, "struqture_py.fermions.FermionHamiltonian.to_bincode"]], "to_json() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.to_json"], [28, "struqture_py.fermions.FermionHamiltonian.to_json"]], "truncate() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.truncate"], [28, "struqture_py.fermions.FermionHamiltonian.truncate"]], "values() (struqture_py.fermions.fermionhamiltonian method)": [[6, "struqture_py.fermions.FermionHamiltonian.values"], [28, "struqture_py.fermions.FermionHamiltonian.values"]], "fermionlindbladnoiseoperator (class in struqture_py.fermions)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator"]], "__init__() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.__init__"]], "add_operator_product() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.add_operator_product"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.add_operator_product"]], "current_number_modes() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.current_number_modes"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.current_number_modes"]], "current_version() (struqture_py.fermions.fermionlindbladnoiseoperator static method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.current_version"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.current_version"]], "empty_clone() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.empty_clone"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.empty_clone"]], "from_bincode() (struqture_py.fermions.fermionlindbladnoiseoperator static method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.from_bincode"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.from_bincode"]], "from_json() (struqture_py.fermions.fermionlindbladnoiseoperator static method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.from_json"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.from_json"]], "get() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.get"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.get"]], "is_empty() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.is_empty"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.is_empty"]], "jordan_wigner() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.jordan_wigner"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.jordan_wigner"]], "json_schema() (struqture_py.fermions.fermionlindbladnoiseoperator static method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.json_schema"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.json_schema"]], "keys() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.keys"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.keys"]], "min_supported_version() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.min_supported_version"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.min_supported_version"]], "remove() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.remove"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.remove"]], "set() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.set"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.set"]], "to_bincode() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.to_bincode"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.to_bincode"]], "to_json() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.to_json"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.to_json"]], "truncate() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.truncate"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.truncate"]], "values() (struqture_py.fermions.fermionlindbladnoiseoperator method)": [[7, "struqture_py.fermions.FermionLindbladNoiseOperator.values"], [28, "struqture_py.fermions.FermionLindbladNoiseOperator.values"]], "fermionlindbladopensystem (class in struqture_py.fermions)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem"], [28, "struqture_py.fermions.FermionLindbladOpenSystem"]], "__init__() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.__init__"]], "current_number_modes() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.current_number_modes"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.current_number_modes"]], "current_version() (struqture_py.fermions.fermionlindbladopensystem static method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.current_version"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.current_version"]], "empty_clone() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.empty_clone"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.empty_clone"]], "from_bincode() (struqture_py.fermions.fermionlindbladopensystem static method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.from_bincode"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.from_bincode"]], "from_json() (struqture_py.fermions.fermionlindbladopensystem static method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.from_json"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.from_json"]], "group() (struqture_py.fermions.fermionlindbladopensystem static method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.group"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.group"]], "jordan_wigner() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.jordan_wigner"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.jordan_wigner"]], "json_schema() (struqture_py.fermions.fermionlindbladopensystem static method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.json_schema"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.json_schema"]], "min_supported_version() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.min_supported_version"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.min_supported_version"]], "noise() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.noise"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.noise"]], "noise_add_operator_product() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.noise_add_operator_product"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.noise_add_operator_product"]], "noise_get() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.noise_get"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.noise_get"]], "noise_set() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.noise_set"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.noise_set"]], "system() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.system"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.system"]], "system_add_operator_product() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.system_add_operator_product"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.system_add_operator_product"]], "system_get() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.system_get"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.system_get"]], "system_set() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.system_set"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.system_set"]], "to_bincode() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.to_bincode"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.to_bincode"]], "to_json() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.to_json"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.to_json"]], "truncate() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.truncate"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.truncate"]], "ungroup() (struqture_py.fermions.fermionlindbladopensystem method)": [[8, "struqture_py.fermions.FermionLindbladOpenSystem.ungroup"], [28, "struqture_py.fermions.FermionLindbladOpenSystem.ungroup"]], "fermionoperator (class in struqture_py.fermions)": [[9, "struqture_py.fermions.FermionOperator"], [28, "struqture_py.fermions.FermionOperator"]], "__init__() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.__init__"]], "add_operator_product() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.add_operator_product"], [28, "struqture_py.fermions.FermionOperator.add_operator_product"]], "current_number_modes() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.current_number_modes"], [28, "struqture_py.fermions.FermionOperator.current_number_modes"]], "current_version() (struqture_py.fermions.fermionoperator static method)": [[9, "struqture_py.fermions.FermionOperator.current_version"], [28, "struqture_py.fermions.FermionOperator.current_version"]], "empty_clone() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.empty_clone"], [28, "struqture_py.fermions.FermionOperator.empty_clone"]], "from_bincode() (struqture_py.fermions.fermionoperator static method)": [[9, "struqture_py.fermions.FermionOperator.from_bincode"], [28, "struqture_py.fermions.FermionOperator.from_bincode"]], "from_json() (struqture_py.fermions.fermionoperator static method)": [[9, "struqture_py.fermions.FermionOperator.from_json"], [28, "struqture_py.fermions.FermionOperator.from_json"]], "get() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.get"], [28, "struqture_py.fermions.FermionOperator.get"]], "hermitian_conjugate() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.hermitian_conjugate"], [28, "struqture_py.fermions.FermionOperator.hermitian_conjugate"]], "is_empty() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.is_empty"], [28, "struqture_py.fermions.FermionOperator.is_empty"]], "jordan_wigner() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.jordan_wigner"], [28, "struqture_py.fermions.FermionOperator.jordan_wigner"]], "json_schema() (struqture_py.fermions.fermionoperator static method)": [[9, "struqture_py.fermions.FermionOperator.json_schema"], [28, "struqture_py.fermions.FermionOperator.json_schema"]], "keys() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.keys"], [28, "struqture_py.fermions.FermionOperator.keys"]], "min_supported_version() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.min_supported_version"], [28, "struqture_py.fermions.FermionOperator.min_supported_version"]], "remove() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.remove"], [28, "struqture_py.fermions.FermionOperator.remove"]], "set() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.set"], [28, "struqture_py.fermions.FermionOperator.set"]], "to_bincode() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.to_bincode"], [28, "struqture_py.fermions.FermionOperator.to_bincode"]], "to_json() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.to_json"], [28, "struqture_py.fermions.FermionOperator.to_json"]], "truncate() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.truncate"], [28, "struqture_py.fermions.FermionOperator.truncate"]], "values() (struqture_py.fermions.fermionoperator method)": [[9, "struqture_py.fermions.FermionOperator.values"], [28, "struqture_py.fermions.FermionOperator.values"]], "fermionproduct (class in struqture_py.fermions)": [[10, "struqture_py.fermions.FermionProduct"], [28, "struqture_py.fermions.FermionProduct"]], "__init__() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.__init__"]], "annihilators() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.annihilators"], [28, "struqture_py.fermions.FermionProduct.annihilators"]], "create_valid_pair() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.create_valid_pair"], [28, "struqture_py.fermions.FermionProduct.create_valid_pair"]], "creators() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.creators"], [28, "struqture_py.fermions.FermionProduct.creators"]], "current_number_modes() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.current_number_modes"], [28, "struqture_py.fermions.FermionProduct.current_number_modes"]], "current_version() (struqture_py.fermions.fermionproduct static method)": [[10, "struqture_py.fermions.FermionProduct.current_version"], [28, "struqture_py.fermions.FermionProduct.current_version"]], "from_bincode() (struqture_py.fermions.fermionproduct static method)": [[10, "struqture_py.fermions.FermionProduct.from_bincode"], [28, "struqture_py.fermions.FermionProduct.from_bincode"]], "from_json() (struqture_py.fermions.fermionproduct static method)": [[10, "struqture_py.fermions.FermionProduct.from_json"], [28, "struqture_py.fermions.FermionProduct.from_json"]], "from_string() (struqture_py.fermions.fermionproduct static method)": [[10, "struqture_py.fermions.FermionProduct.from_string"], [28, "struqture_py.fermions.FermionProduct.from_string"]], "hermitian_conjugate() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.hermitian_conjugate"], [28, "struqture_py.fermions.FermionProduct.hermitian_conjugate"]], "is_natural_hermitian() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.is_natural_hermitian"], [28, "struqture_py.fermions.FermionProduct.is_natural_hermitian"]], "jordan_wigner() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.jordan_wigner"], [28, "struqture_py.fermions.FermionProduct.jordan_wigner"]], "json_schema() (struqture_py.fermions.fermionproduct static method)": [[10, "struqture_py.fermions.FermionProduct.json_schema"], [28, "struqture_py.fermions.FermionProduct.json_schema"]], "min_supported_version() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.min_supported_version"], [28, "struqture_py.fermions.FermionProduct.min_supported_version"]], "number_annihilators() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.number_annihilators"], [28, "struqture_py.fermions.FermionProduct.number_annihilators"]], "number_creators() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.number_creators"], [28, "struqture_py.fermions.FermionProduct.number_creators"]], "remap_modes() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.remap_modes"], [28, "struqture_py.fermions.FermionProduct.remap_modes"]], "to_bincode() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.to_bincode"], [28, "struqture_py.fermions.FermionProduct.to_bincode"]], "to_json() (struqture_py.fermions.fermionproduct method)": [[10, "struqture_py.fermions.FermionProduct.to_json"], [28, "struqture_py.fermions.FermionProduct.to_json"]], "hermitianfermionproduct (class in struqture_py.fermions)": [[11, "struqture_py.fermions.HermitianFermionProduct"], [28, "struqture_py.fermions.HermitianFermionProduct"]], "__init__() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.__init__"]], "annihilators() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.annihilators"], [28, "struqture_py.fermions.HermitianFermionProduct.annihilators"]], "create_valid_pair() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.create_valid_pair"], [28, "struqture_py.fermions.HermitianFermionProduct.create_valid_pair"]], "creators() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.creators"], [28, "struqture_py.fermions.HermitianFermionProduct.creators"]], "current_number_modes() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.current_number_modes"], [28, "struqture_py.fermions.HermitianFermionProduct.current_number_modes"]], "current_version() (struqture_py.fermions.hermitianfermionproduct static method)": [[11, "struqture_py.fermions.HermitianFermionProduct.current_version"], [28, "struqture_py.fermions.HermitianFermionProduct.current_version"]], "from_bincode() (struqture_py.fermions.hermitianfermionproduct static method)": [[11, "struqture_py.fermions.HermitianFermionProduct.from_bincode"], [28, "struqture_py.fermions.HermitianFermionProduct.from_bincode"]], "from_json() (struqture_py.fermions.hermitianfermionproduct static method)": [[11, "struqture_py.fermions.HermitianFermionProduct.from_json"], [28, "struqture_py.fermions.HermitianFermionProduct.from_json"]], "from_string() (struqture_py.fermions.hermitianfermionproduct static method)": [[11, "struqture_py.fermions.HermitianFermionProduct.from_string"], [28, "struqture_py.fermions.HermitianFermionProduct.from_string"]], "hermitian_conjugate() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.hermitian_conjugate"], [28, "struqture_py.fermions.HermitianFermionProduct.hermitian_conjugate"]], "is_natural_hermitian() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.is_natural_hermitian"], [28, "struqture_py.fermions.HermitianFermionProduct.is_natural_hermitian"]], "jordan_wigner() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.jordan_wigner"], [28, "struqture_py.fermions.HermitianFermionProduct.jordan_wigner"]], "json_schema() (struqture_py.fermions.hermitianfermionproduct static method)": [[11, "struqture_py.fermions.HermitianFermionProduct.json_schema"], [28, "struqture_py.fermions.HermitianFermionProduct.json_schema"]], "min_supported_version() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.min_supported_version"], [28, "struqture_py.fermions.HermitianFermionProduct.min_supported_version"]], "number_annihilators() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.number_annihilators"], [28, "struqture_py.fermions.HermitianFermionProduct.number_annihilators"]], "number_creators() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.number_creators"], [28, "struqture_py.fermions.HermitianFermionProduct.number_creators"]], "remap_modes() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.remap_modes"], [28, "struqture_py.fermions.HermitianFermionProduct.remap_modes"]], "to_bincode() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.to_bincode"], [28, "struqture_py.fermions.HermitianFermionProduct.to_bincode"]], "to_json() (struqture_py.fermions.hermitianfermionproduct method)": [[11, "struqture_py.fermions.HermitianFermionProduct.to_json"], [28, "struqture_py.fermions.HermitianFermionProduct.to_json"]], "hermitianmixedproduct (class in struqture_py.mixed_systems)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct"], [29, "struqture_py.mixed_systems.HermitianMixedProduct"]], "__init__() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.__init__"]], "bosons() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.bosons"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.bosons"]], "create_valid_pair() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.create_valid_pair"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.create_valid_pair"]], "current_number_bosonic_modes() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.current_number_bosonic_modes"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.current_number_bosonic_modes"]], "current_number_fermionic_modes() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.current_number_fermionic_modes"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.current_number_fermionic_modes"]], "current_number_spins() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.current_number_spins"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.current_number_spins"]], "current_version() (struqture_py.mixed_systems.hermitianmixedproduct static method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.current_version"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.current_version"]], "fermions() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.fermions"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.fermions"]], "from_bincode() (struqture_py.mixed_systems.hermitianmixedproduct static method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.from_bincode"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.from_bincode"]], "from_json() (struqture_py.mixed_systems.hermitianmixedproduct static method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.from_json"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.from_json"]], "from_string() (struqture_py.mixed_systems.hermitianmixedproduct static method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.from_string"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.from_string"]], "hermitian_conjugate() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.hermitian_conjugate"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.hermitian_conjugate"]], "is_natural_hermitian() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.is_natural_hermitian"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.is_natural_hermitian"]], "json_schema() (struqture_py.mixed_systems.hermitianmixedproduct static method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.json_schema"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.json_schema"]], "min_supported_version() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.min_supported_version"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.min_supported_version"]], "spins() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.spins"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.spins"]], "to_bincode() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.to_bincode"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.to_bincode"]], "to_json() (struqture_py.mixed_systems.hermitianmixedproduct method)": [[12, "struqture_py.mixed_systems.HermitianMixedProduct.to_json"], [29, "struqture_py.mixed_systems.HermitianMixedProduct.to_json"]], "mixeddecoherenceproduct (class in struqture_py.mixed_systems)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct"]], "__init__() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.__init__"]], "bosons() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.bosons"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.bosons"]], "create_valid_pair() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.create_valid_pair"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.create_valid_pair"]], "current_number_bosonic_modes() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.current_number_bosonic_modes"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.current_number_bosonic_modes"]], "current_number_fermionic_modes() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.current_number_fermionic_modes"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.current_number_fermionic_modes"]], "current_number_spins() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.current_number_spins"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.current_number_spins"]], "current_version() (struqture_py.mixed_systems.mixeddecoherenceproduct static method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.current_version"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.current_version"]], "fermions() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.fermions"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.fermions"]], "from_bincode() (struqture_py.mixed_systems.mixeddecoherenceproduct static method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.from_bincode"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.from_bincode"]], "from_json() (struqture_py.mixed_systems.mixeddecoherenceproduct static method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.from_json"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.from_json"]], "from_string() (struqture_py.mixed_systems.mixeddecoherenceproduct static method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.from_string"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.from_string"]], "hermitian_conjugate() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.hermitian_conjugate"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.hermitian_conjugate"]], "is_natural_hermitian() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.is_natural_hermitian"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.is_natural_hermitian"]], "json_schema() (struqture_py.mixed_systems.mixeddecoherenceproduct static method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.json_schema"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.json_schema"]], "min_supported_version() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.min_supported_version"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.min_supported_version"]], "spins() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.spins"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.spins"]], "to_bincode() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.to_bincode"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.to_bincode"]], "to_json() (struqture_py.mixed_systems.mixeddecoherenceproduct method)": [[13, "struqture_py.mixed_systems.MixedDecoherenceProduct.to_json"], [29, "struqture_py.mixed_systems.MixedDecoherenceProduct.to_json"]], "mixedhamiltonian (class in struqture_py.mixed_systems)": [[14, "struqture_py.mixed_systems.MixedHamiltonian"], [29, "struqture_py.mixed_systems.MixedHamiltonian"]], "__init__() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.__init__"]], "add_operator_product() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.add_operator_product"], [29, "struqture_py.mixed_systems.MixedHamiltonian.add_operator_product"]], "current_number_bosonic_modes() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.current_number_bosonic_modes"], [29, "struqture_py.mixed_systems.MixedHamiltonian.current_number_bosonic_modes"]], "current_number_fermionic_modes() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.current_number_fermionic_modes"], [29, "struqture_py.mixed_systems.MixedHamiltonian.current_number_fermionic_modes"]], "current_number_spins() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.current_number_spins"], [29, "struqture_py.mixed_systems.MixedHamiltonian.current_number_spins"]], "current_version() (struqture_py.mixed_systems.mixedhamiltonian static method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.current_version"], [29, "struqture_py.mixed_systems.MixedHamiltonian.current_version"]], "empty_clone() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.empty_clone"], [29, "struqture_py.mixed_systems.MixedHamiltonian.empty_clone"]], "from_bincode() (struqture_py.mixed_systems.mixedhamiltonian static method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.from_bincode"], [29, "struqture_py.mixed_systems.MixedHamiltonian.from_bincode"]], "from_json() (struqture_py.mixed_systems.mixedhamiltonian static method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.from_json"], [29, "struqture_py.mixed_systems.MixedHamiltonian.from_json"]], "get() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.get"], [29, "struqture_py.mixed_systems.MixedHamiltonian.get"]], "hermitian_conjugate() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.hermitian_conjugate"], [29, "struqture_py.mixed_systems.MixedHamiltonian.hermitian_conjugate"]], "is_empty() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.is_empty"], [29, "struqture_py.mixed_systems.MixedHamiltonian.is_empty"]], "json_schema() (struqture_py.mixed_systems.mixedhamiltonian static method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.json_schema"], [29, "struqture_py.mixed_systems.MixedHamiltonian.json_schema"]], "keys() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.keys"], [29, "struqture_py.mixed_systems.MixedHamiltonian.keys"]], "min_supported_version() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.min_supported_version"], [29, "struqture_py.mixed_systems.MixedHamiltonian.min_supported_version"]], "remove() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.remove"], [29, "struqture_py.mixed_systems.MixedHamiltonian.remove"]], "set() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.set"], [29, "struqture_py.mixed_systems.MixedHamiltonian.set"]], "to_bincode() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.to_bincode"], [29, "struqture_py.mixed_systems.MixedHamiltonian.to_bincode"]], "to_json() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.to_json"], [29, "struqture_py.mixed_systems.MixedHamiltonian.to_json"]], "truncate() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.truncate"], [29, "struqture_py.mixed_systems.MixedHamiltonian.truncate"]], "values() (struqture_py.mixed_systems.mixedhamiltonian method)": [[14, "struqture_py.mixed_systems.MixedHamiltonian.values"], [29, "struqture_py.mixed_systems.MixedHamiltonian.values"]], "mixedlindbladnoiseoperator (class in struqture_py.mixed_systems)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator"]], "__init__() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.__init__"]], "add_operator_product() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.add_operator_product"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.add_operator_product"]], "current_number_bosonic_modes() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.current_number_bosonic_modes"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.current_number_bosonic_modes"]], "current_number_fermionic_modes() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.current_number_fermionic_modes"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.current_number_fermionic_modes"]], "current_number_spins() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.current_number_spins"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.current_number_spins"]], "current_version() (struqture_py.mixed_systems.mixedlindbladnoiseoperator static method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.current_version"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.current_version"]], "empty_clone() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.empty_clone"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.empty_clone"]], "from_bincode() (struqture_py.mixed_systems.mixedlindbladnoiseoperator static method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.from_bincode"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.from_bincode"]], "from_json() (struqture_py.mixed_systems.mixedlindbladnoiseoperator static method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.from_json"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.from_json"]], "get() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.get"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.get"]], "is_empty() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.is_empty"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.is_empty"]], "json_schema() (struqture_py.mixed_systems.mixedlindbladnoiseoperator static method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.json_schema"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.json_schema"]], "keys() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.keys"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.keys"]], "min_supported_version() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.min_supported_version"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.min_supported_version"]], "remove() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.remove"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.remove"]], "set() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.set"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.set"]], "to_bincode() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.to_bincode"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.to_bincode"]], "to_json() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.to_json"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.to_json"]], "truncate() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.truncate"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.truncate"]], "values() (struqture_py.mixed_systems.mixedlindbladnoiseoperator method)": [[15, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.values"], [29, "struqture_py.mixed_systems.MixedLindbladNoiseOperator.values"]], "mixedlindbladopensystem (class in struqture_py.mixed_systems)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem"]], "__init__() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.__init__"]], "current_number_bosonic_modes() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.current_number_bosonic_modes"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.current_number_bosonic_modes"]], "current_number_fermionic_modes() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.current_number_fermionic_modes"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.current_number_fermionic_modes"]], "current_number_spins() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.current_number_spins"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.current_number_spins"]], "current_version() (struqture_py.mixed_systems.mixedlindbladopensystem static method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.current_version"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.current_version"]], "empty_clone() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.empty_clone"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.empty_clone"]], "from_bincode() (struqture_py.mixed_systems.mixedlindbladopensystem static method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.from_bincode"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.from_bincode"]], "from_json() (struqture_py.mixed_systems.mixedlindbladopensystem static method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.from_json"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.from_json"]], "group() (struqture_py.mixed_systems.mixedlindbladopensystem static method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.group"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.group"]], "json_schema() (struqture_py.mixed_systems.mixedlindbladopensystem static method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.json_schema"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.json_schema"]], "min_supported_version() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.min_supported_version"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.min_supported_version"]], "noise() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.noise"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.noise"]], "noise_add_operator_product() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.noise_add_operator_product"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.noise_add_operator_product"]], "noise_get() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.noise_get"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.noise_get"]], "noise_set() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.noise_set"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.noise_set"]], "system() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.system"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.system"]], "system_add_operator_product() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.system_add_operator_product"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.system_add_operator_product"]], "system_get() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.system_get"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.system_get"]], "system_set() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.system_set"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.system_set"]], "to_bincode() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.to_bincode"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.to_bincode"]], "to_json() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.to_json"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.to_json"]], "truncate() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.truncate"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.truncate"]], "ungroup() (struqture_py.mixed_systems.mixedlindbladopensystem method)": [[16, "struqture_py.mixed_systems.MixedLindbladOpenSystem.ungroup"], [29, "struqture_py.mixed_systems.MixedLindbladOpenSystem.ungroup"]], "mixedoperator (class in struqture_py.mixed_systems)": [[17, "struqture_py.mixed_systems.MixedOperator"], [29, "struqture_py.mixed_systems.MixedOperator"]], "__init__() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.__init__"]], "add_operator_product() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.add_operator_product"], [29, "struqture_py.mixed_systems.MixedOperator.add_operator_product"]], "current_number_bosonic_modes() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.current_number_bosonic_modes"], [29, "struqture_py.mixed_systems.MixedOperator.current_number_bosonic_modes"]], "current_number_fermionic_modes() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.current_number_fermionic_modes"], [29, "struqture_py.mixed_systems.MixedOperator.current_number_fermionic_modes"]], "current_number_spins() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.current_number_spins"], [29, "struqture_py.mixed_systems.MixedOperator.current_number_spins"]], "current_version() (struqture_py.mixed_systems.mixedoperator static method)": [[17, "struqture_py.mixed_systems.MixedOperator.current_version"], [29, "struqture_py.mixed_systems.MixedOperator.current_version"]], "empty_clone() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.empty_clone"], [29, "struqture_py.mixed_systems.MixedOperator.empty_clone"]], "from_bincode() (struqture_py.mixed_systems.mixedoperator static method)": [[17, "struqture_py.mixed_systems.MixedOperator.from_bincode"], [29, "struqture_py.mixed_systems.MixedOperator.from_bincode"]], "from_json() (struqture_py.mixed_systems.mixedoperator static method)": [[17, "struqture_py.mixed_systems.MixedOperator.from_json"], [29, "struqture_py.mixed_systems.MixedOperator.from_json"]], "get() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.get"], [29, "struqture_py.mixed_systems.MixedOperator.get"]], "hermitian_conjugate() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.hermitian_conjugate"], [29, "struqture_py.mixed_systems.MixedOperator.hermitian_conjugate"]], "is_empty() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.is_empty"], [29, "struqture_py.mixed_systems.MixedOperator.is_empty"]], "json_schema() (struqture_py.mixed_systems.mixedoperator static method)": [[17, "struqture_py.mixed_systems.MixedOperator.json_schema"], [29, "struqture_py.mixed_systems.MixedOperator.json_schema"]], "keys() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.keys"], [29, "struqture_py.mixed_systems.MixedOperator.keys"]], "min_supported_version() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.min_supported_version"], [29, "struqture_py.mixed_systems.MixedOperator.min_supported_version"]], "remove() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.remove"], [29, "struqture_py.mixed_systems.MixedOperator.remove"]], "set() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.set"], [29, "struqture_py.mixed_systems.MixedOperator.set"]], "to_bincode() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.to_bincode"], [29, "struqture_py.mixed_systems.MixedOperator.to_bincode"]], "to_json() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.to_json"], [29, "struqture_py.mixed_systems.MixedOperator.to_json"]], "truncate() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.truncate"], [29, "struqture_py.mixed_systems.MixedOperator.truncate"]], "values() (struqture_py.mixed_systems.mixedoperator method)": [[17, "struqture_py.mixed_systems.MixedOperator.values"], [29, "struqture_py.mixed_systems.MixedOperator.values"]], "mixedplusminusoperator (class in struqture_py.mixed_systems)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator"]], "__init__() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.__init__"]], "add_operator_product() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.add_operator_product"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.add_operator_product"]], "current_number_bosonic_modes() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.current_number_bosonic_modes"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.current_number_bosonic_modes"]], "current_number_fermionic_modes() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.current_number_fermionic_modes"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.current_number_fermionic_modes"]], "current_number_spins() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.current_number_spins"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.current_number_spins"]], "current_version() (struqture_py.mixed_systems.mixedplusminusoperator static method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.current_version"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.current_version"]], "empty_clone() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.empty_clone"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.empty_clone"]], "from_bincode() (struqture_py.mixed_systems.mixedplusminusoperator static method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.from_bincode"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.from_bincode"]], "from_json() (struqture_py.mixed_systems.mixedplusminusoperator static method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.from_json"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.from_json"]], "from_mixed_system() (struqture_py.mixed_systems.mixedplusminusoperator static method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.from_mixed_system"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.from_mixed_system"]], "get() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.get"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.get"]], "hermitian_conjugate() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.hermitian_conjugate"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.hermitian_conjugate"]], "is_empty() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.is_empty"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.is_empty"]], "json_schema() (struqture_py.mixed_systems.mixedplusminusoperator static method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.json_schema"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.json_schema"]], "keys() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.keys"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.keys"]], "min_supported_version() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.min_supported_version"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.min_supported_version"]], "remove() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.remove"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.remove"]], "set() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.set"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.set"]], "to_bincode() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.to_bincode"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.to_bincode"]], "to_json() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.to_json"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.to_json"]], "to_mixed_system() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.to_mixed_system"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.to_mixed_system"]], "truncate() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.truncate"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.truncate"]], "values() (struqture_py.mixed_systems.mixedplusminusoperator method)": [[18, "struqture_py.mixed_systems.MixedPlusMinusOperator.values"], [29, "struqture_py.mixed_systems.MixedPlusMinusOperator.values"]], "mixedplusminusproduct (class in struqture_py.mixed_systems)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct"]], "__init__() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.__init__"]], "bosons() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.bosons"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.bosons"]], "current_number_bosonic_modes() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.current_number_bosonic_modes"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.current_number_bosonic_modes"]], "current_number_fermionic_modes() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.current_number_fermionic_modes"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.current_number_fermionic_modes"]], "current_number_spins() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.current_number_spins"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.current_number_spins"]], "current_version() (struqture_py.mixed_systems.mixedplusminusproduct static method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.current_version"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.current_version"]], "fermions() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.fermions"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.fermions"]], "from_bincode() (struqture_py.mixed_systems.mixedplusminusproduct static method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.from_bincode"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.from_bincode"]], "from_json() (struqture_py.mixed_systems.mixedplusminusproduct static method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.from_json"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.from_json"]], "from_mixed_product() (struqture_py.mixed_systems.mixedplusminusproduct static method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.from_mixed_product"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.from_mixed_product"]], "from_string() (struqture_py.mixed_systems.mixedplusminusproduct static method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.from_string"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.from_string"]], "hermitian_conjugate() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.hermitian_conjugate"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.hermitian_conjugate"]], "is_natural_hermitian() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.is_natural_hermitian"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.is_natural_hermitian"]], "json_schema() (struqture_py.mixed_systems.mixedplusminusproduct static method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.json_schema"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.json_schema"]], "min_supported_version() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.min_supported_version"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.min_supported_version"]], "spins() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.spins"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.spins"]], "to_bincode() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.to_bincode"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.to_bincode"]], "to_json() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.to_json"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.to_json"]], "to_mixed_product_list() (struqture_py.mixed_systems.mixedplusminusproduct method)": [[19, "struqture_py.mixed_systems.MixedPlusMinusProduct.to_mixed_product_list"], [29, "struqture_py.mixed_systems.MixedPlusMinusProduct.to_mixed_product_list"]], "mixedproduct (class in struqture_py.mixed_systems)": [[20, "struqture_py.mixed_systems.MixedProduct"], [29, "struqture_py.mixed_systems.MixedProduct"]], "__init__() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.__init__"]], "bosons() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.bosons"], [29, "struqture_py.mixed_systems.MixedProduct.bosons"]], "create_valid_pair() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.create_valid_pair"], [29, "struqture_py.mixed_systems.MixedProduct.create_valid_pair"]], "current_number_bosonic_modes() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.current_number_bosonic_modes"], [29, "struqture_py.mixed_systems.MixedProduct.current_number_bosonic_modes"]], "current_number_fermionic_modes() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.current_number_fermionic_modes"], [29, "struqture_py.mixed_systems.MixedProduct.current_number_fermionic_modes"]], "current_number_spins() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.current_number_spins"], [29, "struqture_py.mixed_systems.MixedProduct.current_number_spins"]], "current_version() (struqture_py.mixed_systems.mixedproduct static method)": [[20, "struqture_py.mixed_systems.MixedProduct.current_version"], [29, "struqture_py.mixed_systems.MixedProduct.current_version"]], "fermions() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.fermions"], [29, "struqture_py.mixed_systems.MixedProduct.fermions"]], "from_bincode() (struqture_py.mixed_systems.mixedproduct static method)": [[20, "struqture_py.mixed_systems.MixedProduct.from_bincode"], [29, "struqture_py.mixed_systems.MixedProduct.from_bincode"]], "from_json() (struqture_py.mixed_systems.mixedproduct static method)": [[20, "struqture_py.mixed_systems.MixedProduct.from_json"], [29, "struqture_py.mixed_systems.MixedProduct.from_json"]], "from_string() (struqture_py.mixed_systems.mixedproduct static method)": [[20, "struqture_py.mixed_systems.MixedProduct.from_string"], [29, "struqture_py.mixed_systems.MixedProduct.from_string"]], "hermitian_conjugate() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.hermitian_conjugate"], [29, "struqture_py.mixed_systems.MixedProduct.hermitian_conjugate"]], "is_natural_hermitian() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.is_natural_hermitian"], [29, "struqture_py.mixed_systems.MixedProduct.is_natural_hermitian"]], "json_schema() (struqture_py.mixed_systems.mixedproduct static method)": [[20, "struqture_py.mixed_systems.MixedProduct.json_schema"], [29, "struqture_py.mixed_systems.MixedProduct.json_schema"]], "min_supported_version() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.min_supported_version"], [29, "struqture_py.mixed_systems.MixedProduct.min_supported_version"]], "spins() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.spins"], [29, "struqture_py.mixed_systems.MixedProduct.spins"]], "to_bincode() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.to_bincode"], [29, "struqture_py.mixed_systems.MixedProduct.to_bincode"]], "to_json() (struqture_py.mixed_systems.mixedproduct method)": [[20, "struqture_py.mixed_systems.MixedProduct.to_json"], [29, "struqture_py.mixed_systems.MixedProduct.to_json"]], "decoherenceproduct (class in struqture_py.spins)": [[21, "struqture_py.spins.DecoherenceProduct"], [30, "struqture_py.spins.DecoherenceProduct"]], "__init__() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.__init__"]], "concatenate() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.concatenate"], [30, "struqture_py.spins.DecoherenceProduct.concatenate"]], "current_number_spins() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.current_number_spins"], [30, "struqture_py.spins.DecoherenceProduct.current_number_spins"]], "current_version() (struqture_py.spins.decoherenceproduct static method)": [[21, "struqture_py.spins.DecoherenceProduct.current_version"], [30, "struqture_py.spins.DecoherenceProduct.current_version"]], "from_bincode() (struqture_py.spins.decoherenceproduct static method)": [[21, "struqture_py.spins.DecoherenceProduct.from_bincode"], [30, "struqture_py.spins.DecoherenceProduct.from_bincode"]], "from_json() (struqture_py.spins.decoherenceproduct static method)": [[21, "struqture_py.spins.DecoherenceProduct.from_json"], [30, "struqture_py.spins.DecoherenceProduct.from_json"]], "from_string() (struqture_py.spins.decoherenceproduct static method)": [[21, "struqture_py.spins.DecoherenceProduct.from_string"], [30, "struqture_py.spins.DecoherenceProduct.from_string"]], "get() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.get"], [30, "struqture_py.spins.DecoherenceProduct.get"]], "hermitian_conjugate() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.hermitian_conjugate"], [30, "struqture_py.spins.DecoherenceProduct.hermitian_conjugate"]], "is_empty() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.is_empty"], [30, "struqture_py.spins.DecoherenceProduct.is_empty"]], "is_natural_hermitian() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.is_natural_hermitian"], [30, "struqture_py.spins.DecoherenceProduct.is_natural_hermitian"]], "iy() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.iy"], [30, "struqture_py.spins.DecoherenceProduct.iy"]], "jordan_wigner() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.jordan_wigner"], [30, "struqture_py.spins.DecoherenceProduct.jordan_wigner"]], "json_schema() (struqture_py.spins.decoherenceproduct static method)": [[21, "struqture_py.spins.DecoherenceProduct.json_schema"], [30, "struqture_py.spins.DecoherenceProduct.json_schema"]], "keys() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.keys"], [30, "struqture_py.spins.DecoherenceProduct.keys"]], "min_supported_version() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.min_supported_version"], [30, "struqture_py.spins.DecoherenceProduct.min_supported_version"]], "multiply() (struqture_py.spins.decoherenceproduct static method)": [[21, "struqture_py.spins.DecoherenceProduct.multiply"], [30, "struqture_py.spins.DecoherenceProduct.multiply"]], "remap_qubits() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.remap_qubits"], [30, "struqture_py.spins.DecoherenceProduct.remap_qubits"]], "set_pauli() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.set_pauli"], [30, "struqture_py.spins.DecoherenceProduct.set_pauli"]], "to_bincode() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.to_bincode"], [30, "struqture_py.spins.DecoherenceProduct.to_bincode"]], "to_json() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.to_json"], [30, "struqture_py.spins.DecoherenceProduct.to_json"]], "x() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.x"], [30, "struqture_py.spins.DecoherenceProduct.x"]], "z() (struqture_py.spins.decoherenceproduct method)": [[21, "struqture_py.spins.DecoherenceProduct.z"], [30, "struqture_py.spins.DecoherenceProduct.z"]], "pauliproduct (class in struqture_py.spins)": [[22, "struqture_py.spins.PauliProduct"], [30, "struqture_py.spins.PauliProduct"]], "__init__() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.__init__"]], "concatenate() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.concatenate"], [30, "struqture_py.spins.PauliProduct.concatenate"]], "current_number_spins() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.current_number_spins"], [30, "struqture_py.spins.PauliProduct.current_number_spins"]], "current_version() (struqture_py.spins.pauliproduct static method)": [[22, "struqture_py.spins.PauliProduct.current_version"], [30, "struqture_py.spins.PauliProduct.current_version"]], "from_bincode() (struqture_py.spins.pauliproduct static method)": [[22, "struqture_py.spins.PauliProduct.from_bincode"], [30, "struqture_py.spins.PauliProduct.from_bincode"]], "from_json() (struqture_py.spins.pauliproduct static method)": [[22, "struqture_py.spins.PauliProduct.from_json"], [30, "struqture_py.spins.PauliProduct.from_json"]], "from_string() (struqture_py.spins.pauliproduct static method)": [[22, "struqture_py.spins.PauliProduct.from_string"], [30, "struqture_py.spins.PauliProduct.from_string"]], "get() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.get"], [30, "struqture_py.spins.PauliProduct.get"]], "hermitian_conjugate() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.hermitian_conjugate"], [30, "struqture_py.spins.PauliProduct.hermitian_conjugate"]], "is_empty() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.is_empty"], [30, "struqture_py.spins.PauliProduct.is_empty"]], "is_natural_hermitian() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.is_natural_hermitian"], [30, "struqture_py.spins.PauliProduct.is_natural_hermitian"]], "jordan_wigner() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.jordan_wigner"], [30, "struqture_py.spins.PauliProduct.jordan_wigner"]], "json_schema() (struqture_py.spins.pauliproduct static method)": [[22, "struqture_py.spins.PauliProduct.json_schema"], [30, "struqture_py.spins.PauliProduct.json_schema"]], "keys() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.keys"], [30, "struqture_py.spins.PauliProduct.keys"]], "min_supported_version() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.min_supported_version"], [30, "struqture_py.spins.PauliProduct.min_supported_version"]], "multiply() (struqture_py.spins.pauliproduct static method)": [[22, "struqture_py.spins.PauliProduct.multiply"], [30, "struqture_py.spins.PauliProduct.multiply"]], "remap_qubits() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.remap_qubits"], [30, "struqture_py.spins.PauliProduct.remap_qubits"]], "set_pauli() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.set_pauli"], [30, "struqture_py.spins.PauliProduct.set_pauli"]], "to_bincode() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.to_bincode"], [30, "struqture_py.spins.PauliProduct.to_bincode"]], "to_json() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.to_json"], [30, "struqture_py.spins.PauliProduct.to_json"]], "x() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.x"], [30, "struqture_py.spins.PauliProduct.x"]], "y() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.y"], [30, "struqture_py.spins.PauliProduct.y"]], "z() (struqture_py.spins.pauliproduct method)": [[22, "struqture_py.spins.PauliProduct.z"], [30, "struqture_py.spins.PauliProduct.z"]], "qubithamiltonian (class in struqture_py.spins)": [[23, "struqture_py.spins.QubitHamiltonian"], [30, "struqture_py.spins.QubitHamiltonian"]], "__init__() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.__init__"]], "add_operator_product() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.add_operator_product"], [30, "struqture_py.spins.QubitHamiltonian.add_operator_product"]], "current_number_spins() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.current_number_spins"], [30, "struqture_py.spins.QubitHamiltonian.current_number_spins"]], "current_version() (struqture_py.spins.qubithamiltonian static method)": [[23, "struqture_py.spins.QubitHamiltonian.current_version"], [30, "struqture_py.spins.QubitHamiltonian.current_version"]], "empty_clone() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.empty_clone"], [30, "struqture_py.spins.QubitHamiltonian.empty_clone"]], "from_bincode() (struqture_py.spins.qubithamiltonian static method)": [[23, "struqture_py.spins.QubitHamiltonian.from_bincode"], [30, "struqture_py.spins.QubitHamiltonian.from_bincode"]], "from_json() (struqture_py.spins.qubithamiltonian static method)": [[23, "struqture_py.spins.QubitHamiltonian.from_json"], [30, "struqture_py.spins.QubitHamiltonian.from_json"]], "get() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.get"], [30, "struqture_py.spins.QubitHamiltonian.get"]], "hermitian_conjugate() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.hermitian_conjugate"], [30, "struqture_py.spins.QubitHamiltonian.hermitian_conjugate"]], "is_empty() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.is_empty"], [30, "struqture_py.spins.QubitHamiltonian.is_empty"]], "jordan_wigner() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.jordan_wigner"], [30, "struqture_py.spins.QubitHamiltonian.jordan_wigner"]], "json_schema() (struqture_py.spins.qubithamiltonian static method)": [[23, "struqture_py.spins.QubitHamiltonian.json_schema"], [30, "struqture_py.spins.QubitHamiltonian.json_schema"]], "keys() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.keys"], [30, "struqture_py.spins.QubitHamiltonian.keys"]], "min_supported_version() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.min_supported_version"], [30, "struqture_py.spins.QubitHamiltonian.min_supported_version"]], "remove() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.remove"], [30, "struqture_py.spins.QubitHamiltonian.remove"]], "set() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.set"], [30, "struqture_py.spins.QubitHamiltonian.set"]], "sparse_lindblad_entries() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.sparse_lindblad_entries"], [30, "struqture_py.spins.QubitHamiltonian.sparse_lindblad_entries"]], "sparse_matrix_coo() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.sparse_matrix_coo"], [30, "struqture_py.spins.QubitHamiltonian.sparse_matrix_coo"]], "sparse_matrix_superoperator_coo() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.sparse_matrix_superoperator_coo"], [30, "struqture_py.spins.QubitHamiltonian.sparse_matrix_superoperator_coo"]], "to_bincode() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.to_bincode"], [30, "struqture_py.spins.QubitHamiltonian.to_bincode"]], "to_json() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.to_json"], [30, "struqture_py.spins.QubitHamiltonian.to_json"]], "truncate() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.truncate"], [30, "struqture_py.spins.QubitHamiltonian.truncate"]], "unitary_sparse_matrix_coo() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.unitary_sparse_matrix_coo"], [30, "struqture_py.spins.QubitHamiltonian.unitary_sparse_matrix_coo"]], "values() (struqture_py.spins.qubithamiltonian method)": [[23, "struqture_py.spins.QubitHamiltonian.values"], [30, "struqture_py.spins.QubitHamiltonian.values"]], "qubitlindbladnoiseoperator (class in struqture_py.spins)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator"], [30, "struqture_py.spins.QubitLindbladNoiseOperator"]], "__init__() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.__init__"]], "add_operator_product() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.add_operator_product"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.add_operator_product"]], "current_number_spins() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.current_number_spins"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.current_number_spins"]], "current_version() (struqture_py.spins.qubitlindbladnoiseoperator static method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.current_version"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.current_version"]], "empty_clone() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.empty_clone"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.empty_clone"]], "from_bincode() (struqture_py.spins.qubitlindbladnoiseoperator static method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.from_bincode"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.from_bincode"]], "from_json() (struqture_py.spins.qubitlindbladnoiseoperator static method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.from_json"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.from_json"]], "get() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.get"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.get"]], "is_empty() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.is_empty"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.is_empty"]], "jordan_wigner() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.jordan_wigner"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.jordan_wigner"]], "json_schema() (struqture_py.spins.qubitlindbladnoiseoperator static method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.json_schema"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.json_schema"]], "keys() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.keys"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.keys"]], "min_supported_version() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.min_supported_version"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.min_supported_version"]], "remove() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.remove"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.remove"]], "separate_into_n_terms() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.separate_into_n_terms"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.separate_into_n_terms"]], "set() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.set"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.set"]], "sparse_lindblad_entries() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.sparse_lindblad_entries"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.sparse_lindblad_entries"]], "sparse_matrix_superoperator_coo() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.sparse_matrix_superoperator_coo"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.sparse_matrix_superoperator_coo"]], "to_bincode() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.to_bincode"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.to_bincode"]], "to_json() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.to_json"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.to_json"]], "truncate() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.truncate"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.truncate"]], "unitary_sparse_matrix_coo() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.unitary_sparse_matrix_coo"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.unitary_sparse_matrix_coo"]], "values() (struqture_py.spins.qubitlindbladnoiseoperator method)": [[24, "struqture_py.spins.QubitLindbladNoiseOperator.values"], [30, "struqture_py.spins.QubitLindbladNoiseOperator.values"]], "qubitlindbladopensystem (class in struqture_py.spins)": [[25, "struqture_py.spins.QubitLindbladOpenSystem"], [30, "struqture_py.spins.QubitLindbladOpenSystem"]], "__init__() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.__init__"]], "current_number_spins() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.current_number_spins"], [30, "struqture_py.spins.QubitLindbladOpenSystem.current_number_spins"]], "current_version() (struqture_py.spins.qubitlindbladopensystem static method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.current_version"], [30, "struqture_py.spins.QubitLindbladOpenSystem.current_version"]], "empty_clone() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.empty_clone"], [30, "struqture_py.spins.QubitLindbladOpenSystem.empty_clone"]], "from_bincode() (struqture_py.spins.qubitlindbladopensystem static method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.from_bincode"], [30, "struqture_py.spins.QubitLindbladOpenSystem.from_bincode"]], "from_json() (struqture_py.spins.qubitlindbladopensystem static method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.from_json"], [30, "struqture_py.spins.QubitLindbladOpenSystem.from_json"]], "group() (struqture_py.spins.qubitlindbladopensystem static method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.group"], [30, "struqture_py.spins.QubitLindbladOpenSystem.group"]], "jordan_wigner() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.jordan_wigner"], [30, "struqture_py.spins.QubitLindbladOpenSystem.jordan_wigner"]], "json_schema() (struqture_py.spins.qubitlindbladopensystem static method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.json_schema"], [30, "struqture_py.spins.QubitLindbladOpenSystem.json_schema"]], "min_supported_version() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.min_supported_version"], [30, "struqture_py.spins.QubitLindbladOpenSystem.min_supported_version"]], "noise() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.noise"], [30, "struqture_py.spins.QubitLindbladOpenSystem.noise"]], "noise_add_operator_product() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.noise_add_operator_product"], [30, "struqture_py.spins.QubitLindbladOpenSystem.noise_add_operator_product"]], "noise_get() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.noise_get"], [30, "struqture_py.spins.QubitLindbladOpenSystem.noise_get"]], "noise_set() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.noise_set"], [30, "struqture_py.spins.QubitLindbladOpenSystem.noise_set"]], "sparse_lindblad_entries() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.sparse_lindblad_entries"], [30, "struqture_py.spins.QubitLindbladOpenSystem.sparse_lindblad_entries"]], "sparse_matrix_superoperator_coo() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.sparse_matrix_superoperator_coo"], [30, "struqture_py.spins.QubitLindbladOpenSystem.sparse_matrix_superoperator_coo"]], "system() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.system"], [30, "struqture_py.spins.QubitLindbladOpenSystem.system"]], "system_add_operator_product() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.system_add_operator_product"], [30, "struqture_py.spins.QubitLindbladOpenSystem.system_add_operator_product"]], "system_get() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.system_get"], [30, "struqture_py.spins.QubitLindbladOpenSystem.system_get"]], "system_set() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.system_set"], [30, "struqture_py.spins.QubitLindbladOpenSystem.system_set"]], "to_bincode() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.to_bincode"], [30, "struqture_py.spins.QubitLindbladOpenSystem.to_bincode"]], "to_json() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.to_json"], [30, "struqture_py.spins.QubitLindbladOpenSystem.to_json"]], "truncate() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.truncate"], [30, "struqture_py.spins.QubitLindbladOpenSystem.truncate"]], "ungroup() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.ungroup"], [30, "struqture_py.spins.QubitLindbladOpenSystem.ungroup"]], "unitary_sparse_matrix_coo() (struqture_py.spins.qubitlindbladopensystem method)": [[25, "struqture_py.spins.QubitLindbladOpenSystem.unitary_sparse_matrix_coo"], [30, "struqture_py.spins.QubitLindbladOpenSystem.unitary_sparse_matrix_coo"]], "qubitoperator (class in struqture_py.spins)": [[26, "struqture_py.spins.QubitOperator"], [30, "struqture_py.spins.QubitOperator"]], "__init__() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.__init__"]], "add_operator_product() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.add_operator_product"], [30, "struqture_py.spins.QubitOperator.add_operator_product"]], "current_number_spins() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.current_number_spins"], [30, "struqture_py.spins.QubitOperator.current_number_spins"]], "current_version() (struqture_py.spins.qubitoperator static method)": [[26, "struqture_py.spins.QubitOperator.current_version"], [30, "struqture_py.spins.QubitOperator.current_version"]], "empty_clone() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.empty_clone"], [30, "struqture_py.spins.QubitOperator.empty_clone"]], "from_bincode() (struqture_py.spins.qubitoperator static method)": [[26, "struqture_py.spins.QubitOperator.from_bincode"], [30, "struqture_py.spins.QubitOperator.from_bincode"]], "from_json() (struqture_py.spins.qubitoperator static method)": [[26, "struqture_py.spins.QubitOperator.from_json"], [30, "struqture_py.spins.QubitOperator.from_json"]], "get() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.get"], [30, "struqture_py.spins.QubitOperator.get"]], "hermitian_conjugate() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.hermitian_conjugate"], [30, "struqture_py.spins.QubitOperator.hermitian_conjugate"]], "is_empty() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.is_empty"], [30, "struqture_py.spins.QubitOperator.is_empty"]], "jordan_wigner() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.jordan_wigner"], [30, "struqture_py.spins.QubitOperator.jordan_wigner"]], "json_schema() (struqture_py.spins.qubitoperator static method)": [[26, "struqture_py.spins.QubitOperator.json_schema"], [30, "struqture_py.spins.QubitOperator.json_schema"]], "keys() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.keys"], [30, "struqture_py.spins.QubitOperator.keys"]], "min_supported_version() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.min_supported_version"], [30, "struqture_py.spins.QubitOperator.min_supported_version"]], "remove() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.remove"], [30, "struqture_py.spins.QubitOperator.remove"]], "set() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.set"], [30, "struqture_py.spins.QubitOperator.set"]], "sparse_lindblad_entries() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.sparse_lindblad_entries"], [30, "struqture_py.spins.QubitOperator.sparse_lindblad_entries"]], "sparse_matrix_coo() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.sparse_matrix_coo"], [30, "struqture_py.spins.QubitOperator.sparse_matrix_coo"]], "sparse_matrix_superoperator_coo() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.sparse_matrix_superoperator_coo"], [30, "struqture_py.spins.QubitOperator.sparse_matrix_superoperator_coo"]], "to_bincode() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.to_bincode"], [30, "struqture_py.spins.QubitOperator.to_bincode"]], "to_json() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.to_json"], [30, "struqture_py.spins.QubitOperator.to_json"]], "truncate() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.truncate"], [30, "struqture_py.spins.QubitOperator.truncate"]], "unitary_sparse_matrix_coo() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.unitary_sparse_matrix_coo"], [30, "struqture_py.spins.QubitOperator.unitary_sparse_matrix_coo"]], "values() (struqture_py.spins.qubitoperator method)": [[26, "struqture_py.spins.QubitOperator.values"], [30, "struqture_py.spins.QubitOperator.values"]], "module": [[27, "module-struqture_py.bosons"], [28, "module-struqture_py.fermions"], [29, "module-struqture_py.mixed_systems"], [30, "module-struqture_py.spins"], [31, "module-struqture_py"]], "struqture_py.bosons": [[27, "module-struqture_py.bosons"]], "struqture_py.fermions": [[28, "module-struqture_py.fermions"]], "struqture_py.mixed_systems": [[29, "module-struqture_py.mixed_systems"]], "plusminuslindbladnoiseoperator (class in struqture_py.spins)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator"]], "plusminusoperator (class in struqture_py.spins)": [[30, "struqture_py.spins.PlusMinusOperator"]], "plusminusproduct (class in struqture_py.spins)": [[30, "struqture_py.spins.PlusMinusProduct"]], "add_operator_product() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.add_operator_product"]], "add_operator_product() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.add_operator_product"]], "concatenate() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.concatenate"]], "current_number_spins() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.current_number_spins"]], "current_number_spins() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.current_number_spins"]], "current_version() (struqture_py.spins.plusminuslindbladnoiseoperator static method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.current_version"]], "current_version() (struqture_py.spins.plusminusoperator static method)": [[30, "struqture_py.spins.PlusMinusOperator.current_version"]], "current_version() (struqture_py.spins.plusminusproduct static method)": [[30, "struqture_py.spins.PlusMinusProduct.current_version"]], "empty_clone() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.empty_clone"]], "empty_clone() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.empty_clone"]], "from_bincode() (struqture_py.spins.plusminuslindbladnoiseoperator static method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.from_bincode"]], "from_bincode() (struqture_py.spins.plusminusoperator static method)": [[30, "struqture_py.spins.PlusMinusOperator.from_bincode"]], "from_bincode() (struqture_py.spins.plusminusproduct static method)": [[30, "struqture_py.spins.PlusMinusProduct.from_bincode"]], "from_json() (struqture_py.spins.plusminuslindbladnoiseoperator static method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.from_json"]], "from_json() (struqture_py.spins.plusminusoperator static method)": [[30, "struqture_py.spins.PlusMinusOperator.from_json"]], "from_json() (struqture_py.spins.plusminusproduct static method)": [[30, "struqture_py.spins.PlusMinusProduct.from_json"]], "from_product() (struqture_py.spins.plusminusproduct static method)": [[30, "struqture_py.spins.PlusMinusProduct.from_product"]], "from_qubit_hamiltonian() (struqture_py.spins.plusminusoperator static method)": [[30, "struqture_py.spins.PlusMinusOperator.from_qubit_hamiltonian"]], "from_qubit_noise_operator() (struqture_py.spins.plusminuslindbladnoiseoperator static method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.from_qubit_noise_operator"]], "from_qubit_operator() (struqture_py.spins.plusminusoperator static method)": [[30, "struqture_py.spins.PlusMinusOperator.from_qubit_operator"]], "from_string() (struqture_py.spins.plusminusproduct static method)": [[30, "struqture_py.spins.PlusMinusProduct.from_string"]], "get() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.get"]], "get() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.get"]], "get() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.get"]], "hermitian_conjugate() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.hermitian_conjugate"]], "hermitian_conjugate() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.hermitian_conjugate"]], "is_empty() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.is_empty"]], "is_empty() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.is_empty"]], "is_empty() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.is_empty"]], "is_natural_hermitian() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.is_natural_hermitian"]], "jordan_wigner() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.jordan_wigner"]], "jordan_wigner() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.jordan_wigner"]], "jordan_wigner() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.jordan_wigner"]], "json_schema() (struqture_py.spins.plusminuslindbladnoiseoperator static method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.json_schema"]], "json_schema() (struqture_py.spins.plusminusoperator static method)": [[30, "struqture_py.spins.PlusMinusOperator.json_schema"]], "json_schema() (struqture_py.spins.plusminusproduct static method)": [[30, "struqture_py.spins.PlusMinusProduct.json_schema"]], "keys() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.keys"]], "keys() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.keys"]], "keys() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.keys"]], "min_supported_version() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.min_supported_version"]], "min_supported_version() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.min_supported_version"]], "min_supported_version() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.min_supported_version"]], "minus() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.minus"]], "plus() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.plus"]], "remap_qubits() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.remap_qubits"]], "remove() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.remove"]], "remove() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.remove"]], "set() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.set"]], "set() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.set"]], "set_pauli() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.set_pauli"]], "struqture_py.spins": [[30, "module-struqture_py.spins"]], "to_bincode() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.to_bincode"]], "to_bincode() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.to_bincode"]], "to_bincode() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.to_bincode"]], "to_decoherence_product_list() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.to_decoherence_product_list"]], "to_json() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.to_json"]], "to_json() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.to_json"]], "to_json() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.to_json"]], "to_pauli_product_list() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.to_pauli_product_list"]], "to_qubit_hamiltonian() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.to_qubit_hamiltonian"]], "to_qubit_noise_operator() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.to_qubit_noise_operator"]], "to_qubit_operator() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.to_qubit_operator"]], "truncate() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.truncate"]], "truncate() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.truncate"]], "values() (struqture_py.spins.plusminuslindbladnoiseoperator method)": [[30, "struqture_py.spins.PlusMinusLindbladNoiseOperator.values"]], "values() (struqture_py.spins.plusminusoperator method)": [[30, "struqture_py.spins.PlusMinusOperator.values"]], "z() (struqture_py.spins.plusminusproduct method)": [[30, "struqture_py.spins.PlusMinusProduct.z"]], "struqture_py": [[31, "module-struqture_py"]]}})